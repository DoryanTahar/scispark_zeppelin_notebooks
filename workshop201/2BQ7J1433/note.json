{
  "paragraphs": [
    {
      "text": "%md\n## Please note this is Part 2 of the Graph Algorithm to-date in SciSpark.\nIf you missed Part 1, we encourage you to run that notebook **FIRST** as there are variable dependencies!\n\n\n![The major steps of the GTG](https://raw.githubusercontent.com/SciSpark/scispark_zeppelin_notebooks/master/images/GTGSteps.png)                          \n               Figure 1: The major steps of the the Grab \u0027em, Tag \u0027em, Graph \u0027em algorithm\n               \n####Useful references\n* Palamuttam, R., R. Marroquín Mogrovejo, C. Mattmann, B. Wilson, K. Whitehall, R. Verma, L. McGibbney, and P. Ramirez, 2015. SciSpark: Applying In-memory Distributed Computing to Weather Event Detection and Tracking. In 2015 IEEE International Conference on Big Data (Big Data) on, pp. 1959 - 1965.\n\n* Whitehall, K., C. Mattmann, G. Jenkins, M. Rwebangira, B. Demoz, D.  Waliser, J. Kim, C. Goodale, A. Hart, P. Ramirez, M. Joyce, M. Boustani, P. Zimdars, P. Loikith, and H. Lee, 2014. Exploring a graph theory based algorithm for automated identification and characterization of large mesoscale convective systems in satellite datasets. Earth Science Informatics. DOI: 10.1007/s12145-014-0181-3\n",
      "dateUpdated": "Jul 18, 2016 4:12:51 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468598007871_1146042679",
      "id": "20160715-085327_1473732656",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003ePlease note this is Part 2 of the Graph Algorithm to-date in SciSpark.\u003c/h2\u003e\n\u003cp\u003eIf you missed Part 1, we encourage you to run that notebook \u003cstrong\u003eFIRST\u003c/strong\u003e as there are variable dependencies!\u003c/p\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://raw.githubusercontent.com/SciSpark/scispark_zeppelin_notebooks/master/images/GTGSteps.png\" alt\u003d\"The major steps of the GTG\" /\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e           Figure 1: The major steps of the the Grab \u0027em, Tag \u0027em, Graph \u0027em algorithm\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003eUseful references\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003ePalamuttam, R., R. Marroquín Mogrovejo, C. Mattmann, B. Wilson, K. Whitehall, R. Verma, L. McGibbney, and P. Ramirez, 2015. SciSpark: Applying In-memory Distributed Computing to Weather Event Detection and Tracking. In 2015 IEEE International Conference on Big Data (Big Data) on, pp. 1959 - 1965.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhitehall, K., C. Mattmann, G. Jenkins, M. Rwebangira, B. Demoz, D.  Waliser, J. Kim, C. Goodale, A. Hart, P. Ramirez, M. Joyce, M. Boustani, P. Zimdars, P. Loikith, and H. Lee, 2014. Exploring a graph theory based algorithm for automated identification and characterization of large mesoscale convective systems in satellite datasets. Earth Science Informatics. DOI: 10.1007/s12145-014-0181-3\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Jul 15, 2016 8:53:27 AM",
      "dateStarted": "Jul 18, 2016 4:12:47 AM",
      "dateFinished": "Jul 18, 2016 4:12:47 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n## Find the subgraphs\nThese subgraphs physically identify the cloudy areas that have evolve in time\nRight now we are reading the edgeList from a file which has to send to HDFS \nThere is a bit of cleaning of the file to be done before moving to HDFS. More specifically, remove \u0027List(\u0027 from the beginning of the file and last \u0027)\u0027 at the end of the file (these are from converting the List so as to print the outputs into the file).\nOnce this is done, the subgraphs part can be run. \n\nOur graph (the data object representing all the cloud elements and their connectivity through out the start and end times):\n* Sparse, disconnected and directed. \n* There are no cycles\n\nOur initial approach to determine all the connected subgraphs within this graph is:\n* Partition nodes such that possible connected nodes are together\n* On each partition: eliminate only subgraphs that are found in that partition \n* Merge consecutive partitions and repeat subgraph elimination\n* Continue until one partition remains OR all nodes are gone\n\nOur approach ensures a maximum number of iterations of log(paritions)/log(2) + 1\n\nOutstanding TODOs:\n* continued testing\n* allowing to read the edgelist directly from the RDD (ie. eliminate the text writing part)\n",
      "dateUpdated": "Jul 18, 2016 4:13:04 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468589108915_-1068766492",
      "id": "20160715-062508_163496936",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eFind the subgraphs\u003c/h2\u003e\n\u003cp\u003eThese subgraphs physically identify the cloudy areas that have evolve in time\n\u003cbr  /\u003eRight now we are reading the edgeList from a file which has to send to HDFS\n\u003cbr  /\u003eThere is a bit of cleaning of the file to be done before moving to HDFS. More specifically, remove \u0027List(\u0027 from the beginning of the file and last \u0027)\u0027 at the end of the file (these are from converting the List so as to print the outputs into the file).\n\u003cbr  /\u003eOnce this is done, the subgraphs part can be run.\u003c/p\u003e\n\u003cp\u003eOur graph (the data object representing all the cloud elements and their connectivity through out the start and end times):\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSparse, disconnected and directed.\u003c/li\u003e\n\u003cli\u003eThere are no cycles\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOur initial approach to determine all the connected subgraphs within this graph is:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePartition nodes such that possible connected nodes are together\u003c/li\u003e\n\u003cli\u003eOn each partition: eliminate only subgraphs that are found in that partition\u003c/li\u003e\n\u003cli\u003eMerge consecutive partitions and repeat subgraph elimination\u003c/li\u003e\n\u003cli\u003eContinue until one partition remains OR all nodes are gone\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOur approach ensures a maximum number of iterations of log(paritions)/log(2) + 1\u003c/p\u003e\n\u003cp\u003eOutstanding TODOs:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003econtinued testing\u003c/li\u003e\n\u003cli\u003eallowing to read the edgelist directly from the RDD (ie. eliminate the text writing part)\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Jul 15, 2016 6:25:08 AM",
      "dateStarted": "Jul 18, 2016 4:13:01 AM",
      "dateFinished": "Jul 18, 2016 4:13:01 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val edgesRDDn \u003d sc.parallelize(MCCEdgeList).map({ x \u003d\u003e s\"((${x.srcNode.frameNum}, ${x.srcNode.cloudElemNum}),(${x.destNode.frameNum}, ${x.destNode.cloudElemNum}))\"})\n\nval subGraphsCountn \u003d edgesRDDn.map({x \u003d\u003e{\n    val bins: Int \u003d 8\n    val frames: Int \u003d 40\n    val frameBucketSize: Float \u003d frames / bins // Number of frames in each bucket, here its 5\n    val minAcceptableFeatureLength \u003d 3\n    val maxIterations \u003d scala.math.ceil(scala.math.log(bins)/scala.math.log(2)) + 1\n    \n    val nodes1 \u003d x.split(\"\\\\),\\\\(\")\n    val source \u003d nodes1(0).slice(2, nodes1(0).length).split(\",\") // (FrameNum, CloudElemNum)\n    val dest \u003d nodes1(1).slice(0, nodes1(1).length - 2).split(\",\") // (FrameNum, CloudElemNum)\n    val nodeMap \u003d new mutable.HashMap[String, MCCNode]()\n    val sourceFrameNum \u003d x.slice(2, x.indexOfSlice(\",\")).toInt\n    val sourceKey \u003d source(0) + source(1)\n    val destKey \u003d dest(0) + dest(1)\n    \n    if (!nodeMap.contains(sourceKey)) { // Add node to nodeMap if not present \n      nodeMap.put(sourceKey, new MCCNode(source(0).toInt, source(1).toFloat))\n    }\n    if (!nodeMap.contains(destKey)) {\n      nodeMap.put(destKey, new MCCNode(dest(0).toInt, dest(1).toFloat))\n    }\n    val sourceNode: MCCNode \u003d nodeMap.get(sourceKey).get\n    val destNode \u003d nodeMap.get(destKey).get\n\n    for (i \u003c- 1 to bins) {\n      if (sourceFrameNum \u003c\u003d frameBucketSize * i) { // Finding the bucket to put this edge into\n        val bucket: Integer \u003d i\n        (bucket,new MCCEdge(sourceNode, destNode)) // return the bucket number and a new edge\n      }\n    }\n     (java.lang.Integer.valueOf(bins), new MCCEdge(sourceNode, destNode)) // put edge highest bucket number\n}}).groupByKey() // group by key to get all edges in one bucket together\nMainDistGraphMCC.getSubgraphs(subGraphsCountn, 1) // call recursive subgraph finding code",
      "dateUpdated": "Jul 18, 2016 1:18:53 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "lineNumbers": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468589108916_-1070690236",
      "id": "20160715-062508_8978043",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "edgesRDDn: org.apache.spark.rdd.RDD[String] \u003d MapPartitionsRDD[16] at map at \u003cconsole\u003e:76\nsubGraphsCountn: org.apache.spark.rdd.RDD[(Integer, Iterable[org.dia.algorithms.mcc.MCCEdge])] \u003d ShuffledRDD[18] at groupByKey at \u003cconsole\u003e:110\n"
      },
      "dateCreated": "Jul 15, 2016 6:25:08 AM",
      "dateStarted": "Jul 17, 2016 7:54:15 PM",
      "dateFinished": "Jul 17, 2016 7:54:29 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n## Step 10: Visualize the subgraphs\nFirst we need to place this data in a format that is useful for the visualization, then write it to a file. ",
      "dateUpdated": "Jul 15, 2016 6:25:08 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468589108916_-1070690236",
      "id": "20160715-062508_570113411",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eVisualize the subgraphs\u003c/h2\u003e\n\u003cp\u003eFirst we need to place this data in a format that is useful for the visualization, then write it to a file.\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 15, 2016 6:25:08 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val sgn \u003d subGraphsCountn.flatMap(t\u003d\u003e t._2)\nval sg1n \u003d sgn.map({ t \u003d\u003e (\"\u0027F\"+t.toString.split(\",\")(0).split(\",\")(0).drop(2)+\"CE\"+t.toString.split(\",\")(1).split(\",\")(0).dropRight(3)+\"\u0027\", \"\u0027F\"+t.toString.split(\",\")(2).split(\",\")(0).drop(2)+\"CE\"+t.toString.split(\",\")(3).dropRight(4)+\"\u0027\")})\n\n// transfer the variable to the Python environment\nz.put(\"graphEdgesVis\", sg1n.collect())\n",
      "dateUpdated": "Jul 17, 2016 7:55:51 PM",
      "config": {
        "enabled": true,
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "colWidth": 12.0,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468589108916_-1070690236",
      "id": "20160715-062508_1971549410",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "sgn: org.apache.spark.rdd.RDD[org.dia.algorithms.mcc.MCCEdge] \u003d MapPartitionsRDD[21] at flatMap at \u003cconsole\u003e:91\nsg1n: org.apache.spark.rdd.RDD[(String, String)] \u003d MapPartitionsRDD[22] at map at \u003cconsole\u003e:93\nres46: Object \u003d Array((\u0027F2006080103CE674830.\u0027,\u0027F2006080104CE754\u0027), (\u0027F2006080103CE1214400.\u0027,\u0027F2006080104CE1056\u0027), (\u0027F2006080103CE979204.\u0027,\u0027F2006080104CE916\u0027), (\u0027F2006080103CE19272.\u0027,\u0027F2006080104CE132\u0027), (\u0027F2006080103CE62776.\u0027,\u0027F2006080104CE236\u0027), (\u0027F2006080103CE8245.\u0027,\u0027F2006080104CE85\u0027), (\u0027F2006080103CE12155.\u0027,\u0027F2006080104CE85\u0027), (\u0027F2006080103CE942564.\u0027,\u0027F2006080104CE916\u0027), (\u0027F2006080103CE52074.\u0027,\u0027F2006080104CE198\u0027), (\u0027F2006080103CE50752.\u0027,\u0027F2006080104CE208\u0027), (\u0027F2006080103CE402545.\u0027,\u0027F2006080104CE563\u0027), (\u0027F2006080103CE1121919.\u0027,\u0027F2006080104CE1019\u0027), (\u0027F2006080103CE1096000.\u0027,\u0027F2006080104CE1000\u0027), (\u0027F2006080103CE99160.\u0027,\u0027F2006080104CE296\u0027), (\u0027F2006080103CE147232.\u0027,\u0027F2006080104CE344\u0027), (\u0027F2006080103CE55255.\u0027,\u0027F2006080104CE257\u0027), (\u0027F2006080103CE120204.\u0027,\u0027F2006080104CE318\u0027), (\u0027F2006080103CE..."
      },
      "dateCreated": "Jul 15, 2016 6:25:08 AM",
      "dateStarted": "Jul 17, 2016 7:55:51 PM",
      "dateFinished": "Jul 17, 2016 7:55:52 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Scala functions for visualization",
      "text": "import scala.collection.mutable.ListBuffer\nimport java.util\nimport ucar.ma2.{Array, ArrayInt, ArrayDouble, DataType}\nimport ucar.nc2.{NetcdfFileWriter, Dimension, Attribute, Variable }\nimport scala.reflect.ClassTag\nimport scala.collection.JavaConversions._\nimport collection.mutable._\n\ndef netcdf_write(filename:String, varData:ucar.ma2.ArrayInt.D2){\n    import java.util\n    import ucar.ma2.{ArrayInt, ArrayDouble, DataType}\n    import ucar.nc2.{NetcdfFileWriter, Dimension, Attribute, Variable }\n    import scala.reflect.ClassTag\n    import scala.collection.JavaConversions._\n    import collection.mutable._\n\n    try{\n        val latsa \u003d (-5.006254987 to 40.000360884 by 0.036378335).toList  \n        val lonsa \u003d (-90.018179125 to 60.006074415 by 0.036378335).toList\n        \n        val fsplit \u003d filename.split(\"_\")\n        val latMin \u003d fsplit(1).toInt \n        val latMax \u003d fsplit(2).toInt \n        val lonMin \u003d fsplit(3).toInt \n        val lonMax \u003d fsplit(4).dropRight(3).toInt  \n        \n        val lats1 \u003d latsa.slice(latMin, latMax+1)\n        val lons1 \u003d lonsa.slice(lonMin, lonMax+1)\n        \n        val location \u003d \"/home/workshop/cenetcdfs/\"+filename \n        val datafile \u003d NetcdfFileWriter.createNew(NetcdfFileWriter.Version.netcdf3, location, null)\n        \n        // Create netCDF dimensions\n        val lonDim \u003d datafile.addDimension(null, \"longitudes\", lons1.length)\n        val latDim \u003d datafile.addDimension(null, \"latitudes\", lats1.length)\n        \n        // add dim\n        val dims \u003d new util.ArrayList[Dimension]()\n        val latDims \u003d new util.ArrayList[Dimension]()\n        val lonDims \u003d new util.ArrayList[Dimension]()\n        \n        // dims.add(xDim) \n        dims.add(latDim)\n        dims.add(lonDim)\n        \n        latDims.add(latDim)\n        lonDims.add(lonDim)\n        \n        var rr \u003d datafile.addVariable(null, \"CE brightness temperature\", DataType.INT, dims)\n        var latDimVar \u003d datafile.addVariable(null, \"lat\", DataType.DOUBLE, latDims)\n        var lonDimVar \u003d datafile.addVariable(null, \"lon\", DataType.DOUBLE, lonDims)\n        \n        rr.addAttribute(new Attribute(\"units\", \"K\"))   \n        \n        val latData \u003d new ArrayDouble.D1(lats1.length)\n        val lonData \u003d new ArrayDouble.D1(lons1.length)\n        \n        for (i \u003c- 0 until lats1.length) { latData.set(i, lats1(i))}\n        for (i \u003c- 0 until lons1.length) { lonData.set(i, lons1(i))}\n   \n        datafile.create()\n        datafile.write(rr, varData)\n        datafile.write(latDimVar, latData)\n        datafile.write(lonDimVar, lonData)\n       \n        datafile.close()\n    }\n}\n\n//generate netcdf files for the relevant nodes\nval sg2n \u003d sg1n.collect()\n\nsg2n.map({ e \u003d\u003e \n    import ucar.ma2.{Array, ArrayDouble, DataType}\n    \n    var seenNodes \u003d new ListBuffer[String]()\n    var nodeID \u003d \"\"\n    var latMin \u003d.0\n    var latMax \u003d.0\n    var lonMin \u003d.0\n    var lonMax \u003d.0\n    var lonMinOffset \u003d 0\n    var lonMaxOffset \u003d 0\n    var latMinOffset \u003d 0\n    var latMaxOffset \u003d 0\n    \n    val lats \u003d (-5.006254987 to 40.000360884 by 0.036378335).toList  \n    val lons \u003d (-90.018179125 to 60.006074415 by 0.036378335).toList\n    \n    var nodeGrid \u003d new ArrayInt.D2(1238, 4125)\n    var ima \u003d nodeGrid.getIndex()\n    val first \u003d e._1.split(\"CE\")(0).split(\"F\")(1)+\",\"+e._1.split(\"CE\")(1).dropRight(2)+\".0\"\n    \n    if (!seenNodes.contains(first)){\n        seenNodes +\u003d first\n        val fNode \u003d MCCNodeMap.get(first).get\n        \n        //get lat-lon box here\n        val props1 \u003d fNode.metadata.get(\"properties\").getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n        latMin \u003d lats.minBy(v \u003d\u003e math.abs( v - (props1.get(\"latMin\").get)))\n        latMax \u003d lats.minBy(v \u003d\u003e math.abs( v - (props1.get(\"latMax\").get)))\n        lonMin \u003d lons.minBy(v \u003d\u003e math.abs( v - (props1.get(\"lonMin\").get)))\n        lonMax \u003d lons.minBy(v \u003d\u003e math.abs( v - (props1.get(\"lonMax\").get)))\n        \n        latMinOffset \u003d lats.indexOf(latMin)\n        latMaxOffset \u003d lats.indexOf(latMax)\n        lonMinOffset \u003d lons.indexOf(lonMin)\n        lonMaxOffset \u003d lons.indexOf(lonMax)\n        \n        nodeGrid \u003d new ArrayInt.D2(((latMaxOffset-latMinOffset)+1), ((lonMaxOffset-lonMinOffset)+1))\n        ima \u003d nodeGrid.getIndex()\n        \n        val gridMap: mutable.HashMap[String, Double] \u003d fNode.metadata.get(\"grid\")\n          .getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n        gridMap.foreach{case(k,v) \u003d\u003e {\n            val indices \u003d k.replace(\"(\", \"\").replace(\")\",\"\").replace(\" \", \"\").split(\",\")\n            nodeGrid.setDouble(ima.set( (indices(0).toInt) - latMinOffset, (indices(1).toInt) - lonMinOffset), v.toInt)\n        }}\n    \n        nodeID \u003d \"F\"+fNode.frameNum.toString+\"CE\"+fNode.cloudElemNum.toString.dropRight(2)+\"_\"+latMinOffset+\"_\"+latMaxOffset+\"_\"+lonMinOffset+\"_\"+lonMaxOffset+\".nc\"\n        netcdf_write(nodeID, nodeGrid)\n    }\n    \n    val second \u003d e._2.split(\"CE\")(0).split(\"F\")(1)+\",\"+e._2.split(\"CE\")(1).dropRight(1)+\".0\"\n                 \n    if (!seenNodes.contains(second)){\n        seenNodes +\u003d second\n        val sNode \u003d MCCNodeMap.get(second).get\n    \n        //get lat-lon box here\n        val props2 \u003d sNode.metadata.get(\"properties\").getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n        latMin \u003d lats.minBy(v \u003d\u003e math.abs( v - (props2.get(\"latMin\").get)))\n        latMax \u003d lats.minBy(v \u003d\u003e math.abs( v - (props2.get(\"latMax\").get)))\n        lonMin \u003d lons.minBy(v \u003d\u003e math.abs( v - (props2.get(\"lonMin\").get)))\n        lonMax \u003d lons.minBy(v \u003d\u003e math.abs( v - (props2.get(\"lonMax\").get)))\n        \n        latMinOffset \u003d lats.indexOf(latMin)\n        latMaxOffset \u003d lats.indexOf(latMax)\n        lonMinOffset \u003d lons.indexOf(lonMin)\n        lonMaxOffset \u003d lons.indexOf(lonMax)\n        \n        nodeGrid \u003d new ArrayInt.D2(((latMaxOffset-latMinOffset)+1), ((lonMaxOffset-lonMinOffset)+1))\n        ima \u003d nodeGrid.getIndex()\n        \n        val gridMap: mutable.HashMap[String, Double] \u003d sNode.metadata.get(\"grid\")\n          .getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n        gridMap.foreach{case(k,v) \u003d\u003e {\n            val indices \u003d k.replace(\"(\", \"\").replace(\")\",\"\").replace(\" \", \"\").split(\",\")\n            nodeGrid.setDouble(ima.set( (indices(0).toInt) - latMinOffset, (indices(1).toInt) - lonMinOffset), v.toInt)\n        }}\n    \n        nodeID \u003d \"F\"+sNode.frameNum.toString+\"CE\"+sNode.cloudElemNum.toString.dropRight(2)+\"_\"+latMinOffset+\"_\"+latMaxOffset+\"_\"+lonMinOffset+\"_\"+lonMaxOffset+\".nc\"\n        netcdf_write(nodeID, nodeGrid)\n    }\n    \n})",
      "dateUpdated": "Jul 17, 2016 10:02:56 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "tableHide": false,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468770102719_-1578379582",
      "id": "20160717-084142_612603827",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import scala.collection.mutable.ListBuffer\nimport java.util\nimport ucar.ma2.{Array, ArrayInt, ArrayDouble, DataType}\nimport ucar.nc2.{NetcdfFileWriter, Dimension, Attribute, Variable}\nimport scala.reflect.ClassTag\nimport scala.collection.JavaConversions._\nimport collection.mutable._\nnetcdf_write: (filename: String, varData: ucar.ma2.ArrayInt.D2)Unit\nsg2n: Array[(String, String)] \u003d Array((\u0027F2006080103CE674830.\u0027,\u0027F2006080104CE754\u0027), (\u0027F2006080103CE1214400.\u0027,\u0027F2006080104CE1056\u0027), (\u0027F2006080103CE979204.\u0027,\u0027F2006080104CE916\u0027), (\u0027F2006080103CE19272.\u0027,\u0027F2006080104CE132\u0027), (\u0027F2006080103CE62776.\u0027,\u0027F2006080104CE236\u0027), (\u0027F2006080103CE8245.\u0027,\u0027F2006080104CE85\u0027), (\u0027F2006080103CE12155.\u0027,\u0027F2006080104CE85\u0027), (\u0027F2006080103CE942564.\u0027,\u0027F2006080104CE916\u0027), (\u0027F2006080103CE52074.\u0027,\u0027F2006080104CE198\u0027), (\u0027F2006080103CE50752.\u0027,\u0027F2006080104CE208\u0027), (\u0027F2006080103CE402545.\u0027,\u0027F2006080104CE563\u0027), (\u0027F2006080103CE1121919.\u0027,\u0027F2006080104CE1019\u0027), (\u0027F2006080103CE1096000.\u0027,\u0027F2006080104CE1000\u0027), (\u0027F2006080103CE99160.\u0027,\u0027F2006080104CE296\u0027), (\u0027F2006080103CE147232.\u0027,\u0027F2006080104CE344\u0027), (\u0027F2006080103CE55255.\u0027,\u0027F2006080104CE257\u0027), (\u0027F2006080103CE120204.\u0027,\u0027F2006080104CE318\u0027),...res52: Array[Unit] \u003d Array
      },
      "dateCreated": "Jul 17, 2016 8:41:42 AM",
      "dateStarted": "Jul 17, 2016 8:09:01 PM",
      "dateFinished": "Jul 17, 2016 8:09:25 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n#create pngs\nimport os, sys, glob\n\ndef make_imgs(currFile):\n    import numpy as np\n    import os, sys\n    import subprocess\n    import matplotlib\n    matplotlib.use(\u0027Agg\u0027)\n    #os.system(\"export DISPLAY\u003d:0\") \n    \n    import matplotlib.pyplot as plt\n    plt.rcdefaults()\n    \n    import cStringIO\n    import base64\n    from mpl_toolkits.basemap import Basemap, cm\n    \n    from netCDF4 import Dataset\n    \n    workdir \u003d \u0027/home/workshop/cenetcdfs/\u0027\n    \n    fh \u003d Dataset(currFile, \u0027r\u0027)\n    fhlats \u003d fh.variables[\u0027lat\u0027][:]\n    fhlons \u003d fh.variables[\u0027lon\u0027][:]\n    fhbt \u003d fh.variables[\u0027CE_brightness_temperature\u0027][:]\n    fh.close()\n    \n    lon1, lat1 \u003d np.meshgrid(fhlons, fhlats)\n    \n    mp \u003d Basemap(projection \u003d \u0027merc\u0027, llcrnrlon \u003d min(fhlons), urcrnrlon \u003d max(fhlons), llcrnrlat \u003d min(fhlats), urcrnrlat \u003d max(fhlats), resolution \u003d \u0027l\u0027)\n    x1, y1 \u003d mp(lon1, lat1)\n    clevs1 \u003d range(100,250,10)\n    cs1 \u003d mp.contourf(x1, y1, fhbt, clevs1, cmap\u003dcm.s3pcpn)\n    \n    # Add Grid Lines\n    mp.drawparallels(np.arange(-6., 45., 10.), labels\u003d[1,0,0,0], fontsize\u003d8)\n    mp.drawmeridians(np.arange(-95., 65., 20.), labels\u003d[0,0,0,1], fontsize\u003d8)\n    \n    mp.drawcoastlines(linewidth \u003d 0.25)\n    mp.drawcountries(linewidth \u003d 0.25)\n    \n    # Add Colorbar\n    cbar1 \u003d mp.colorbar(cs1, location\u003d\u0027bottom\u0027, pad\u003d\"30%\")\n    cbar1.set_label(\"Brightness Temp in K\")\n    \n    # Add Title\n    ti \u003d currFile.split(\u0027/\u0027)[-1].split(\u0027_\u0027)[0]\n    plt.title(ti)\n    plt.savefig(workdir+\u0027pngs/\u0027+ti+\u0027.png\u0027)\n    \n    plt.close()\n   \n# get the list of the netCDFs generates\nworkdir \u003d \u0027/home/workshop/cenetcdfs/\u0027\n\nceLists \u003d glob.glob(workdir+\u0027*.nc\u0027)\nif not os.path.exists(workdir+\u0027pngs/\u0027):\n    os.makedirs(workdir+\u0027pngs/\u0027)\n    \n# for t in ceLists:\n#     make_imgs(t)\n#map(make_imgs(workdir), ceLists )\n#make_imgs(t, workdir) for t in ceLists",
      "dateUpdated": "Jul 17, 2016 9:22:22 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468782768252_969602337",
      "id": "20160717-121248_1614149816",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark.py\", line 223, in \u003cmodule\u003e\n    compiledCode \u003d compile(final_code, \"\u003cstring\u003e\", \"exec\")\n  File \"\u003cstring\u003e\", line 39\n    // for t in ceLists:\n     ^\nSyntaxError: invalid syntax\n"
      },
      "dateCreated": "Jul 17, 2016 12:12:48 PM",
      "dateStarted": "Jul 17, 2016 9:20:32 PM",
      "dateFinished": "Jul 17, 2016 9:20:32 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Python Functions For Visualization",
      "text": "%pyspark\nimport xmltodict, json, functools, sys\nimport networkx as nx\nfrom pprint import pprint\nimport graphviz as gv\n\ndef add_nodes(graph, nodes):\n    for n in nodes:\n        if isinstance(n, tuple):\n            graph.node(n[0], **n[1])\n        else:\n            graph.node(n)\n    return graph\n\n\ndef add_edges(graph, edges):\n    for e in edges:\n        if isinstance(e[0], tuple):\n            graph.edge(*e[0], **e[1])\n        else:\n            graph.edge(*e)\n    return graph\n\n\ndef main(argFile, maxLimit, edgeList):\n    tuples \u003d [tup for tup in edgeList ]\n    tuplesPy \u003d [] # list()\n    for t in tuples:\n        linep \u003d str(t).replace(\"\u0027\",\"\").replace(\".\",\"\").replace(\"(\", \"\").replace(\")\",\"\").split(\",\")\n        t \u003d (linep[0], linep[1])\n        tuplesPy.append(t)\n\n    G \u003d nx.DiGraph(tuplesPy)\n    weakConnComponents \u003d []\n    for w in nx.weakly_connected_component_subgraphs(G):\n        weakConnComponents.append(w.edges())\n\n    weakConnComponents.sort(key\u003dlambda x: len(x), reverse\u003dTrue)\n\n    # iterate through all weakConnComponents here, lay them out one on top of another\n    yPos \u003d 0\n    for i in range(0, int(maxLimit)):\n\n        digraph \u003d functools.partial(gv.Digraph, graph_attr\u003d{\"rankdir\": \"LR\", }, format\u003d\u0027svg\u0027) #\"ordering\":\"out\"\n        nodes \u003d set()\n        for edgeTup in weakConnComponents[i]:\n            nodes.add(edgeTup[0])\n            nodes.add(edgeTup[1])\n        nodes \u003d list(nodes)\n        edges \u003d weakConnComponents[i]\n\n        add_edges(add_nodes(digraph(), nodes), edges).render(\u0027/home/workshop/img/g\u0027 + str(i))\n\n        with open(\u0027/home/workshop/img/g{0}.svg\u0027.format(i)) as fd:\n            doc \u003d xmltodict.parse(fd.read())\n\n            nodeYLocation \u003d {}\n            for elem in doc[\"svg\"][\"g\"][\"g\"]:\n                if elem[\"@class\"] \u003d\u003d \"node\":\n                   nodeYLocation[elem[\"title\"]] \u003d int(elem[\"ellipse\"][\"@cy\"])\n\n            for key in nodeYLocation:\n                nodeYLocation[key] /\u003d -9\n                nodeYLocation[key] +\u003d yPos\n\n            yPos +\u003d nodeYLocation[max(nodeYLocation, key\u003dnodeYLocation.get)]\n\n            jsonData \u003d None\n            tempList \u003d []\n            with open(argFile) as jsonF:\n                jsonData \u003d eval(jsonF.read().split(\"girls \u003d \")[-1])\n\n                for lineDict in jsonData:\n                    for node in lineDict[\"values\"]:\n\n                        tempList.append(node[\"name\"])\n                        try:\n                            node[\"position\"] \u003d nodeYLocation[node[\"name\"]] + tempList.count(node[\"name\"]) * 0.0001\n                        except KeyError:\n                            continue\n\n\n            with open(argFile, \u0027w\u0027) as outF:\n                json.dump(jsonData, outF, indent\u003d4, sort_keys\u003dTrue, separators\u003d(\u0027,\u0027, \u0027: \u0027))\n\n            data \u003d None\n            with open(argFile, \"r\") as original:\n                data \u003d original.read().lstrip(\"[\")\n\n            with open(argFile, \"w\") as modified:\n                modified.write(\"var girls \u003d [\\n\" + data)\n                \n            with open(\u0027/home/workshop/img/g{0}.svg\u0027.format(i), \"r\") as f:\n                lines \u003d f.read()\n                new_data \u003d lines.replace(\u0027\u003cg id\u003d\"graph1\u0027, \u0027\u003cg id\u003d\"graph{0}\u0027.format(i))\n                f.close()\n\n            with open(\u0027/home/workshop/img/g{0}.svg\u0027.format(i), \"w\") as f:\n                f.write(new_data)\n                f.close()\n\n\ndef draw_sub_graph(js_file, num_subgraphs, graphEdgesVis):\n    num_subgraphs \u003d 5\n    main(js_file, 5, graphEdgesVis)\n    \n    print \"\"\"%html \n            \u003c!DOCTYPE html\u003e\n            \u003cmeta charset\u003d\"utf-8\"\u003e\n            \u003cstyle\u003e\n              div.tooltip {\t\n                position: absolute;\t\t\t\n                text-align: center;\n                padding: 2px;\t\t\n                font: 12px sans-serif;\n                background: lightsteelblue;\n                border: 0px;\n                border-radius: 8px;\n                pointer-events: none;\t\t\t\n            }\n            \u003c/style\u003e\n            \u003cbody\u003e\n              \u003cscript src\u003d\"https://d3js.org/d3.v3.min.js\"\u003e\u003c/script\u003e\n              \u003cdiv id\u003d\"container\"\u003e\u003c/div\u003e\n              \u003cscript\u003e\n                var div \u003d d3.select(\"body\").append(\"div\")\t\n                  .attr(\"class\", \"tooltip\")\t\t\t\t\n                  .style(\"opacity\", 0);\n                \n          function handleClick(cb) {\n        \tvar zoom_id \u003d (cb.id).replace(\u0027z\u0027,\u0027\u0027)\n        \tconsole.log(zoom_id);\n        \tif (document.getElementById(\"z\" + zoom_id).checked) {\n        \t  work(d3.selectAll(\"#graph\" + zoom_id));\n        \t}else{\n        \t  d3.select(\"#graph\" + zoom_id).on(\"dblclick.zoom\", null).on(\"mousewheel.zoom\", null)\n        \t    .on(\"DOMMouseScroll.zoom\", null)\n        \t    .on(\"wheel.zoom\", null);\n            }\n           }\n           \n          function work(svg) {\n          var w  \u003d d3.transform(svg.attr(\"transform\")).translate[0];\n          var h  \u003d d3.transform(svg.attr(\"transform\")).translate[1];\n        \n        \t  svg.call(d3.behavior.zoom().scaleExtent([1, 8]).on(\"zoom\", zoom));\n        \n        \t  svg.selectAll(\"text\")\n        \t  .on(\"mouseover\", function(d) {\n        \t\tvar tmp \u003d d3.select(this)[0][0].innerHTML;\n        \t\t\t  div.transition()\t\t\n        \t\t\t\t  .duration(200)\t\t\n        \t\t\t\t  .style(\"opacity\", .9);\t\t\n        \t\t\t  div.html(\"Node name: \" + tmp + \"\u003cbr/\u003e Latitude: \" + \"122\" + \"\u003cbr/\u003e Longitude: \" + \"90\" )\t\n        \t\t\t\t  .style(\"left\", (d3.event.pageX) + \"px\")\n        \t\t\t\t  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n        \t\t\t  })\t\t\t\t\t\n        \t\t  .on(\"mouseout\", function(d) {\n        \t\t\t  div.transition()\t\t\n        \t\t\t\t  .duration(500)\t\t\n        \t\t\t\t  .style(\"opacity\", 0);});\n        \t\n        \t  function zoom() {\n        \t\tvar s \u003d d3.event.scale;\n        \t\tvar new_w \u003d w + d3.event.translate[0];\n        \t\tvar new_h \u003d h + d3.event.translate[1];\n        \t\tsvg.attr(\"transform\", \"translate(\" + new_w + \",\" + new_h + \")scale(\" + s + \")\");\n        \t  }\n            }\n          \u003c/script\u003e\n            \u003c/body\u003e\n        \"\"\"\n    \n    for i in range(num_subgraphs):\n        with open(\"/home/workshop/img/g{0}.svg\".format(i),\"r\") as f:\n            svg_files_data \u003d f.read()\n    \n        print \"\"\"\u003clabel\u003e\u003cinput type\u003d\u0027checkbox\u0027 id\u003d\"z{0}\" onclick\u003d\u0027handleClick(this);\u0027\u003eEnable Zooming\u003c/label\u003e\"\"\".format(str(i))\n        print svg_files_data",
      "dateUpdated": "Jul 17, 2016 3:46:12 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "lineNumbers": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468752056864_-2087081240",
      "id": "20160717-034056_300656659",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jul 17, 2016 3:40:56 AM",
      "dateStarted": "Jul 17, 2016 3:45:28 AM",
      "dateFinished": "Jul 17, 2016 3:45:28 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n# get the variable\ngraphVizPy \u003d z.get(\"graphEdgesVis\")\n\n# view the top N longest connected graph\nnum_subgraphs \u003d 5\n\ndraw_sub_graph(\"/home/workshop/girl_name_us.js\", num_subgraphs, graphVizPy)",
      "dateUpdated": "Jul 17, 2016 3:44:38 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 115.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468589108917_-1071074985",
      "id": "20160715-062508_357508061",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\n            \u003c!DOCTYPE html\u003e\n            \u003cmeta charset\u003d\"utf-8\"\u003e\n            \u003cstyle\u003e\n              div.tooltip {\t\n                position: absolute;\t\t\t\n                text-align: center;\n                padding: 2px;\t\t\n                font: 12px sans-serif;\n                background: lightsteelblue;\n                border: 0px;\n                border-radius: 8px;\n                pointer-events: none;\t\t\t\n            }\n            \u003c/style\u003e\n            \u003cbody\u003e\n              \u003cscript src\u003d\"https://d3js.org/d3.v3.min.js\"\u003e\u003c/script\u003e\n              \u003cdiv id\u003d\"container\"\u003e\u003c/div\u003e\n              \u003cscript\u003e\n                var div \u003d d3.select(\"body\").append(\"div\")\t\n                  .attr(\"class\", \"tooltip\")\t\t\t\t\n                  .style(\"opacity\", 0);\n          function handleClick(cb) {\n        \tvar zoom_id \u003d (cb.id).replace(\u0027z\u0027,\u0027\u0027)\n        \tconsole.log(zoom_id);\n        \tif (document.getElementById(\"z\" + zoom_id).checked) {\n        \t  work(d3.selectAll(\"#graph\" + zoom_id));\n        \t}else{\n        \t  d3.select(\"#graph\" + zoom_id).on(\"dblclick.zoom\", null).on(\"mousewheel.zoom\", null)\n        \t    .on(\"DOMMouseScroll.zoom\", null)\n        \t    .on(\"wheel.zoom\", null);\n            }\n           }\n          function work(svg) {\n          var w  \u003d d3.transform(svg.attr(\"transform\")).translate[0];\n          var h  \u003d d3.transform(svg.attr(\"transform\")).translate[1];\n        \t  svg.call(d3.behavior.zoom().scaleExtent([1, 8]).on(\"zoom\", zoom));\n        \t  svg.selectAll(\"text\")\n        \t  .on(\"mouseover\", function(d) {\n        \t\tvar tmp \u003d d3.select(this)[0][0].innerHTML;\n        \t\t\t  div.transition()\t\t\n        \t\t\t\t  .duration(200)\t\t\n        \t\t\t\t  .style(\"opacity\", .9);\t\t\n        \t\t\t  div.html(\"Node name: \" + tmp + \"\u003cbr/\u003e Latitude: \" + \"122\" + \"\u003cbr/\u003e Longitude: \" + \"90\" )\t\n        \t\t\t\t  .style(\"left\", (d3.event.pageX) + \"px\")\n        \t\t\t\t  .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n        \t\t\t  })\t\t\t\t\t\n        \t\t  .on(\"mouseout\", function(d) {\n        \t\t\t  div.transition()\t\t\n        \t\t\t\t  .duration(500)\t\t\n        \t\t\t\t  .style(\"opacity\", 0);});\n        \t  function zoom() {\n        \t\tvar s \u003d d3.event.scale;\n        \t\tvar new_w \u003d w + d3.event.translate[0];\n        \t\tvar new_h \u003d h + d3.event.translate[1];\n        \t\tsvg.attr(\"transform\", \"translate(\" + new_w + \",\" + new_h + \")scale(\" + s + \")\");\n        \t  }\n            }\n          \u003c/script\u003e\n            \u003c/body\u003e\n        \n\u003clabel\u003e\u003cinput type\u003d\u0027checkbox\u0027 id\u003d\"z0\" onclick\u003d\u0027handleClick(this);\u0027\u003eEnable Zooming\u003c/label\u003e\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e\n\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\n\u003c!-- Generated by graphviz version 2.26.0 (20091210.2329)\n --\u003e\n\u003c!-- Title: _anonymous_0 Pages: 1 --\u003e\n\u003csvg width\u003d\"438pt\" height\u003d\"550pt\"\n viewBox\u003d\"0.00 0.00 438.00 550.00\" xmlns\u003d\"http://www.w3.org/2000/svg\" xmlns:xlink\u003d\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg id\u003d\"graph0\" class\u003d\"graph\" transform\u003d\"scale(1 1) rotate(0) translate(4 546)\"\u003e\n\u003ctitle\u003e_anonymous_0\u003c/title\u003e\n\u003cpolygon fill\u003d\"white\" stroke\u003d\"white\" points\u003d\"-4,5 -4,-546 435,-546 435,5 -4,5\"/\u003e\n\u003c!-- F2006080114CE359766 --\u003e\n\u003cg id\u003d\"node1\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE359766\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-523\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-519.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE359766\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE414 --\u003e\n\u003cg id\u003d\"node7\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE414\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"339\" cy\u003d\"-271\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"339\" y\u003d\"-267.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE414\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE359766\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge2\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE359766\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M184.089,-510.141C194.087,-506.328 203.708,-501.391 212,-495 278.305,-443.897 315.562,-347.701 330.789,-299.725\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"334.192,-300.567 333.788,-289.98 327.501,-298.508 334.192,-300.567\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE189612 --\u003e\n\u003cg id\u003d\"node2\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE189612\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-467\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-463.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE189612\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE189612\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge4\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE189612\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M181.689,-453.698C192.377,-449.951 202.832,-445.15 212,-439 265.744,-402.947 305.881,-336.438 325.536,-298.822\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"328.652,-300.415 330.087,-289.917 322.419,-297.229 328.652,-300.415\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE315468 --\u003e\n\u003cg id\u003d\"node3\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE315468\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-411\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-407.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE315468\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE315468\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge6\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE315468\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M177.584,-396.971C189.444,-393.285 201.338,-388.693 212,-383 253.361,-360.913 292.482,-322.871 316.099,-297.33\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"318.776,-299.589 322.916,-289.836 313.597,-294.878 318.776,-299.589\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE283590 --\u003e\n\u003cg id\u003d\"node4\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE283590\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-355\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-351.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE283590\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE283590\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge8\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE283590\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M170.111,-339.8C184.045,-336.016 198.616,-331.686 212,-327 239.808,-317.264 270.024,-304.054 294.004,-292.909\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"295.637,-296.009 303.204,-288.592 292.664,-289.671 295.637,-296.009\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE256266 --\u003e\n\u003cg id\u003d\"node5\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE256266\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-299\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-295.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE256266\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE256266\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge10\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE256266\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M194.087,-288.414C212.355,-286.219 231.615,-283.905 249.917,-281.705\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"250.464,-285.165 259.975,-280.497 249.628,-278.215 250.464,-285.165\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE375912 --\u003e\n\u003cg id\u003d\"node6\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE375912\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-243\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-239.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE375912\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE375912\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge12\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE375912\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M194.087,-253.586C212.355,-255.781 231.615,-258.095 249.917,-260.295\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"249.628,-263.785 259.975,-261.503 250.464,-256.835 249.628,-263.785\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE280278 --\u003e\n\u003cg id\u003d\"node8\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE280278\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-187\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE280278\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE280278\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge14\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE280278\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M170.111,-202.2C184.045,-205.984 198.616,-210.314 212,-215 239.808,-224.736 270.024,-237.946 294.004,-249.091\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"292.664,-252.329 303.204,-253.408 295.637,-245.991 292.664,-252.329\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE341136 --\u003e\n\u003cg id\u003d\"node9\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE341136\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-131\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-127.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE341136\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE341136\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge16\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE341136\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M177.584,-145.029C189.444,-148.715 201.338,-153.307 212,-159 253.361,-181.087 292.482,-219.129 316.099,-244.67\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"313.597,-247.122 322.916,-252.164 318.776,-242.411 313.597,-247.122\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE349416 --\u003e\n\u003cg id\u003d\"node10\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE349416\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-75\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-71.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE349416\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE349416\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge18\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE349416\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M181.689,-88.3024C192.377,-92.0493 202.832,-96.8499 212,-103 265.744,-139.053 305.881,-205.562 325.536,-243.178\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"322.419,-244.771 330.087,-252.083 328.652,-241.585 322.419,-244.771\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE323748 --\u003e\n\u003cg id\u003d\"node11\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE323748\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-19\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-15.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE323748\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE323748\u0026#45;\u0026gt;F2006080115CE414 --\u003e\n\u003cg id\u003d\"edge20\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE323748\u0026#45;\u0026gt;F2006080115CE414\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M184.089,-31.8591C194.087,-35.6722 203.708,-40.6093 212,-47 278.305,-98.1034 315.562,-194.299 330.789,-242.275\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"327.501,-243.492 333.788,-252.02 334.192,-241.433 327.501,-243.492\"/\u003e\n\u003c/g\u003e\n\u003c/g\u003e\n\u003c/svg\u003e\n\n\u003clabel\u003e\u003cinput type\u003d\u0027checkbox\u0027 id\u003d\"z1\" onclick\u003d\u0027handleClick(this);\u0027\u003eEnable Zooming\u003c/label\u003e\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e\n\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\n\u003c!-- Generated by graphviz version 2.26.0 (20091210.2329)\n --\u003e\n\u003c!-- Title: _anonymous_0 Pages: 1 --\u003e\n\u003csvg width\u003d\"438pt\" height\u003d\"382pt\"\n viewBox\u003d\"0.00 0.00 438.00 382.00\" xmlns\u003d\"http://www.w3.org/2000/svg\" xmlns:xlink\u003d\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg id\u003d\"graph1\" class\u003d\"graph\" transform\u003d\"scale(1 1) rotate(0) translate(4 378)\"\u003e\n\u003ctitle\u003e_anonymous_0\u003c/title\u003e\n\u003cpolygon fill\u003d\"white\" stroke\u003d\"white\" points\u003d\"-4,5 -4,-378 435,-378 435,5 -4,5\"/\u003e\n\u003c!-- F2006080114CE264 --\u003e\n\u003cg id\u003d\"node1\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE264\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"339\" cy\u003d\"-187\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"339\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE264\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE184272 --\u003e\n\u003cg id\u003d\"node2\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080113CE184272\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-355\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-351.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080113CE184272\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE184272\u0026#45;\u0026gt;F2006080114CE264 --\u003e\n\u003cg id\u003d\"edge2\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080113CE184272\u0026#45;\u0026gt;F2006080114CE264\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M179.821,-341.417C191.05,-337.699 202.16,-332.981 212,-327 259.42,-298.177 299.607,-246.346 321.426,-214.479\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"324.413,-216.309 327.084,-206.056 318.602,-212.406 324.413,-216.309\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE60456 --\u003e\n\u003cg id\u003d\"node3\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080113CE60456\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-299\" rx\u003d\"101.116\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-295.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080113CE60456\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE60456\u0026#45;\u0026gt;F2006080114CE264 --\u003e\n\u003cg id\u003d\"edge4\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080113CE60456\u0026#45;\u0026gt;F2006080114CE264\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M173.302,-284.765C186.406,-281.011 199.841,-276.449 212,-271 246.958,-255.334 283.034,-230.487 307.761,-211.874\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"310.187,-214.425 316.013,-205.575 305.94,-208.86 310.187,-214.425\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE86592 --\u003e\n\u003cg id\u003d\"node4\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080113CE86592\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-243\" rx\u003d\"101.116\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-239.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080113CE86592\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE86592\u0026#45;\u0026gt;F2006080114CE264 --\u003e\n\u003cg id\u003d\"edge6\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080113CE86592\u0026#45;\u0026gt;F2006080114CE264\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M168.44,-227.993C199.591,-220.506 237.369,-211.426 269.445,-203.717\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"270.297,-207.112 279.202,-201.372 268.661,-200.306 270.297,-207.112\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE126720 --\u003e\n\u003cg id\u003d\"node5\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080113CE126720\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-187\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080113CE126720\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE126720\u0026#45;\u0026gt;F2006080114CE264 --\u003e\n\u003cg id\u003d\"edge8\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080113CE126720\u0026#45;\u0026gt;F2006080114CE264\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M211.592,-187C220.247,-187 228.982,-187 237.605,-187\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"237.665,-190.5 247.665,-187 237.664,-183.5 237.665,-190.5\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE103752 --\u003e\n\u003cg id\u003d\"node6\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080113CE103752\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-131\" rx\u003d\"104.86\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-127.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080113CE103752\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE103752\u0026#45;\u0026gt;F2006080114CE264 --\u003e\n\u003cg id\u003d\"edge10\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080113CE103752\u0026#45;\u0026gt;F2006080114CE264\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M169.361,-146.228C200.246,-153.651 237.474,-162.599 269.176,-170.218\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"268.719,-173.708 279.26,-172.642 270.355,-166.902 268.719,-173.708\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE74976 --\u003e\n\u003cg id\u003d\"node7\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080113CE74976\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-75\" rx\u003d\"101.116\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-71.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080113CE74976\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE74976\u0026#45;\u0026gt;F2006080114CE264 --\u003e\n\u003cg id\u003d\"edge12\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080113CE74976\u0026#45;\u0026gt;F2006080114CE264\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M173.302,-89.2352C186.406,-92.9887 199.841,-97.5512 212,-103 246.958,-118.666 283.034,-143.513 307.761,-162.126\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"305.94,-165.14 316.013,-168.425 310.187,-159.575 305.94,-165.14\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE75504 --\u003e\n\u003cg id\u003d\"node8\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080113CE75504\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"106\" cy\u003d\"-19\" rx\u003d\"101.116\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"106\" y\u003d\"-15.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080113CE75504\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080113CE75504\u0026#45;\u0026gt;F2006080114CE264 --\u003e\n\u003cg id\u003d\"edge14\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080113CE75504\u0026#45;\u0026gt;F2006080114CE264\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M178.707,-32.2176C190.314,-35.9903 201.834,-40.8211 212,-47 259.42,-75.823 299.607,-127.654 321.426,-159.521\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"318.602,-161.594 327.084,-167.944 324.413,-157.691 318.602,-161.594\"/\u003e\n\u003c/g\u003e\n\u003c/g\u003e\n\u003c/svg\u003e\n\n\u003clabel\u003e\u003cinput type\u003d\u0027checkbox\u0027 id\u003d\"z2\" onclick\u003d\u0027handleClick(this);\u0027\u003eEnable Zooming\u003c/label\u003e\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e\n\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\n\u003c!-- Generated by graphviz version 2.26.0 (20091210.2329)\n --\u003e\n\u003c!-- Title: _anonymous_0 Pages: 1 --\u003e\n\u003csvg width\u003d\"410pt\" height\u003d\"382pt\"\n viewBox\u003d\"0.00 0.00 410.00 382.00\" xmlns\u003d\"http://www.w3.org/2000/svg\" xmlns:xlink\u003d\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg id\u003d\"graph2\" class\u003d\"graph\" transform\u003d\"scale(1 1) rotate(0) translate(4 378)\"\u003e\n\u003ctitle\u003e_anonymous_0\u003c/title\u003e\n\u003cpolygon fill\u003d\"white\" stroke\u003d\"white\" points\u003d\"-4,5 -4,-378 407,-378 407,5 -4,5\"/\u003e\n\u003c!-- F2006080114CE220 --\u003e\n\u003cg id\u003d\"node1\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE220\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-355\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-351.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE220\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE10 --\u003e\n\u003cg id\u003d\"node7\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE10\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"315\" cy\u003d\"-187\" rx\u003d\"85.7684\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"315\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE10\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE220\u0026#45;\u0026gt;F2006080115CE10 --\u003e\n\u003cg id\u003d\"edge2\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE220\u0026#45;\u0026gt;F2006080115CE10\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M160.678,-341.618C171.606,-337.848 182.48,-333.06 192,-327 237.956,-297.746 276.669,-246.409 297.787,-214.694\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"300.982,-216.203 303.516,-205.916 295.12,-212.377 300.982,-216.203\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE1260 --\u003e\n\u003cg id\u003d\"node2\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE1260\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-299\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-295.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE1260\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE1260\u0026#45;\u0026gt;F2006080115CE10 --\u003e\n\u003cg id\u003d\"edge4\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE1260\u0026#45;\u0026gt;F2006080115CE10\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M157.246,-284.279C169.03,-280.576 181.091,-276.156 192,-271 225.88,-254.988 260.817,-230.188 284.757,-211.679\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"287.034,-214.342 292.747,-205.419 282.717,-208.831 287.034,-214.342\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE700 --\u003e\n\u003cg id\u003d\"node3\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE700\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-243\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-239.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE700\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE700\u0026#45;\u0026gt;F2006080115CE10 --\u003e\n\u003cg id\u003d\"edge6\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE700\u0026#45;\u0026gt;F2006080115CE10\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M153.826,-228.213C182.859,-220.789 218.181,-211.757 248.35,-204.043\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"249.546,-207.35 258.367,-201.482 247.811,-200.568 249.546,-207.35\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE590 --\u003e\n\u003cg id\u003d\"node4\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE590\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-187\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE590\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE590\u0026#45;\u0026gt;F2006080115CE10 --\u003e\n\u003cg id\u003d\"edge8\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE590\u0026#45;\u0026gt;F2006080115CE10\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M187.29,-187C197.501,-187 207.929,-187 218.206,-187\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"218.418,-190.5 228.418,-187 218.418,-183.5 218.418,-190.5\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE330 --\u003e\n\u003cg id\u003d\"node5\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE330\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-131\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-127.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE330\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE330\u0026#45;\u0026gt;F2006080115CE10 --\u003e\n\u003cg id\u003d\"edge10\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE330\u0026#45;\u0026gt;F2006080115CE10\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M153.826,-145.787C182.859,-153.211 218.181,-162.243 248.35,-169.957\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"247.811,-173.432 258.367,-172.518 249.546,-166.65 247.811,-173.432\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE2450 --\u003e\n\u003cg id\u003d\"node6\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE2450\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-75\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-71.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE2450\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE2450\u0026#45;\u0026gt;F2006080115CE10 --\u003e\n\u003cg id\u003d\"edge12\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE2450\u0026#45;\u0026gt;F2006080115CE10\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M157.246,-89.7207C169.03,-93.4245 181.091,-97.8444 192,-103 225.88,-119.012 260.817,-143.812 284.757,-162.321\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"282.717,-165.169 292.747,-168.581 287.034,-159.658 282.717,-165.169\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE650 --\u003e\n\u003cg id\u003d\"node8\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080114CE650\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-19\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-15.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080114CE650\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080114CE650\u0026#45;\u0026gt;F2006080115CE10 --\u003e\n\u003cg id\u003d\"edge14\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080114CE650\u0026#45;\u0026gt;F2006080115CE10\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M160.678,-32.3816C171.606,-36.1525 182.48,-40.9402 192,-47 237.956,-76.2537 276.669,-127.591 297.787,-159.306\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"295.12,-161.623 303.516,-168.084 300.982,-157.797 295.12,-161.623\"/\u003e\n\u003c/g\u003e\n\u003c/g\u003e\n\u003c/svg\u003e\n\n\u003clabel\u003e\u003cinput type\u003d\u0027checkbox\u0027 id\u003d\"z3\" onclick\u003d\u0027handleClick(this);\u0027\u003eEnable Zooming\u003c/label\u003e\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e\n\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\n\u003c!-- Generated by graphviz version 2.26.0 (20091210.2329)\n --\u003e\n\u003c!-- Title: _anonymous_0 Pages: 1 --\u003e\n\u003csvg width\u003d\"458pt\" height\u003d\"382pt\"\n viewBox\u003d\"0.00 0.00 458.00 382.00\" xmlns\u003d\"http://www.w3.org/2000/svg\" xmlns:xlink\u003d\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg id\u003d\"graph3\" class\u003d\"graph\" transform\u003d\"scale(1 1) rotate(0) translate(4 378)\"\u003e\n\u003ctitle\u003e_anonymous_0\u003c/title\u003e\n\u003cpolygon fill\u003d\"white\" stroke\u003d\"white\" points\u003d\"-4,5 -4,-378 455,-378 455,5 -4,5\"/\u003e\n\u003c!-- F2006080119CE2714214 --\u003e\n\u003cg id\u003d\"node1\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080119CE2714214\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"111\" cy\u003d\"-355\" rx\u003d\"109.81\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"111\" y\u003d\"-351.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080119CE2714214\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080120CE1641 --\u003e\n\u003cg id\u003d\"node5\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080120CE1641\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"354\" cy\u003d\"-187\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"354\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080120CE1641\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2714214\u0026#45;\u0026gt;F2006080120CE1641 --\u003e\n\u003cg id\u003d\"edge2\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080119CE2714214\u0026#45;\u0026gt;F2006080120CE1641\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M188.775,-341.418C200.349,-337.705 211.803,-332.988 222,-327 270.712,-298.396 312.666,-246.495 335.535,-214.555\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"338.583,-216.306 341.469,-206.112 332.856,-212.281 338.583,-216.306\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2751957 --\u003e\n\u003cg id\u003d\"node2\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080119CE2751957\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"111\" cy\u003d\"-299\" rx\u003d\"109.81\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"111\" y\u003d\"-295.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080119CE2751957\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2751957\u0026#45;\u0026gt;F2006080120CE1641 --\u003e\n\u003cg id\u003d\"edge4\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080119CE2751957\u0026#45;\u0026gt;F2006080120CE1641\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M182.88,-284.449C196.14,-280.766 209.68,-276.309 222,-271 258.307,-255.353 295.998,-230.346 321.763,-211.679\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"324.034,-214.354 330.024,-205.615 319.892,-208.711 324.034,-214.354\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2663343 --\u003e\n\u003cg id\u003d\"node3\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080119CE2663343\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"111\" cy\u003d\"-243\" rx\u003d\"109.81\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"111\" y\u003d\"-239.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080119CE2663343\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2663343\u0026#45;\u0026gt;F2006080120CE1641 --\u003e\n\u003cg id\u003d\"edge6\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080119CE2663343\u0026#45;\u0026gt;F2006080120CE1641\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M177.401,-227.698C209.62,-220.273 248.398,-211.336 281.399,-203.731\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"282.483,-207.073 291.441,-201.417 280.911,-200.252 282.483,-207.073\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2691240 --\u003e\n\u003cg id\u003d\"node4\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080119CE2691240\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"111\" cy\u003d\"-187\" rx\u003d\"109.81\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"111\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080119CE2691240\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2691240\u0026#45;\u0026gt;F2006080120CE1641 --\u003e\n\u003cg id\u003d\"edge8\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080119CE2691240\u0026#45;\u0026gt;F2006080120CE1641\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M221.834,-187C230.47,-187 239.18,-187 247.785,-187\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"247.829,-190.5 257.829,-187 247.829,-183.5 247.829,-190.5\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2804469 --\u003e\n\u003cg id\u003d\"node6\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080119CE2804469\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"111\" cy\u003d\"-131\" rx\u003d\"109.81\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"111\" y\u003d\"-127.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080119CE2804469\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2804469\u0026#45;\u0026gt;F2006080120CE1641 --\u003e\n\u003cg id\u003d\"edge10\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080119CE2804469\u0026#45;\u0026gt;F2006080120CE1641\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M177.401,-146.302C209.62,-153.727 248.398,-162.664 281.399,-170.269\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"280.911,-173.748 291.441,-172.583 282.483,-166.927 280.911,-173.748\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2694522 --\u003e\n\u003cg id\u003d\"node7\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080119CE2694522\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"111\" cy\u003d\"-75\" rx\u003d\"109.81\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"111\" y\u003d\"-71.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080119CE2694522\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2694522\u0026#45;\u0026gt;F2006080120CE1641 --\u003e\n\u003cg id\u003d\"edge12\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080119CE2694522\u0026#45;\u0026gt;F2006080120CE1641\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M182.88,-89.5506C196.14,-93.2344 209.68,-97.6905 222,-103 258.307,-118.647 295.998,-143.654 321.763,-162.321\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"319.892,-165.289 330.024,-168.385 324.034,-159.646 319.892,-165.289\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2794623 --\u003e\n\u003cg id\u003d\"node8\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080119CE2794623\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"111\" cy\u003d\"-19\" rx\u003d\"109.81\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"111\" y\u003d\"-15.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080119CE2794623\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080119CE2794623\u0026#45;\u0026gt;F2006080120CE1641 --\u003e\n\u003cg id\u003d\"edge14\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080119CE2794623\u0026#45;\u0026gt;F2006080120CE1641\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M188.775,-32.5819C200.349,-36.2953 211.803,-41.0122 222,-47 270.712,-75.6035 312.666,-127.505 335.535,-159.445\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"332.856,-161.719 341.469,-167.888 338.583,-157.694 332.856,-161.719\"/\u003e\n\u003c/g\u003e\n\u003c/g\u003e\n\u003c/svg\u003e\n\n\u003clabel\u003e\u003cinput type\u003d\u0027checkbox\u0027 id\u003d\"z4\" onclick\u003d\u0027handleClick(this);\u0027\u003eEnable Zooming\u003c/label\u003e\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e\n\u003c!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\u003e\n\u003c!-- Generated by graphviz version 2.26.0 (20091210.2329)\n --\u003e\n\u003c!-- Title: _anonymous_0 Pages: 1 --\u003e\n\u003csvg width\u003d\"410pt\" height\u003d\"382pt\"\n viewBox\u003d\"0.00 0.00 410.00 382.00\" xmlns\u003d\"http://www.w3.org/2000/svg\" xmlns:xlink\u003d\"http://www.w3.org/1999/xlink\"\u003e\n\u003cg id\u003d\"graph4\" class\u003d\"graph\" transform\u003d\"scale(1 1) rotate(0) translate(4 378)\"\u003e\n\u003ctitle\u003e_anonymous_0\u003c/title\u003e\n\u003cpolygon fill\u003d\"white\" stroke\u003d\"white\" points\u003d\"-4,5 -4,-378 407,-378 407,5 -4,5\"/\u003e\n\u003c!-- F2006080115CE210 --\u003e\n\u003cg id\u003d\"node1\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE210\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-355\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-351.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE210\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080116CE21 --\u003e\n\u003cg id\u003d\"node4\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080116CE21\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"315\" cy\u003d\"-187\" rx\u003d\"85.7684\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"315\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080116CE21\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE210\u0026#45;\u0026gt;F2006080116CE21 --\u003e\n\u003cg id\u003d\"edge2\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080115CE210\u0026#45;\u0026gt;F2006080116CE21\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M160.678,-341.618C171.606,-337.848 182.48,-333.06 192,-327 237.956,-297.746 276.669,-246.409 297.787,-214.694\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"300.982,-216.203 303.516,-205.916 295.12,-212.377 300.982,-216.203\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE735 --\u003e\n\u003cg id\u003d\"node2\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE735\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-299\" rx\u003d\"91.2168\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-295.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE735\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE735\u0026#45;\u0026gt;F2006080116CE21 --\u003e\n\u003cg id\u003d\"edge4\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080115CE735\u0026#45;\u0026gt;F2006080116CE21\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M155.975,-284.676C168.16,-280.893 180.699,-276.341 192,-271 225.88,-254.988 260.817,-230.188 284.757,-211.679\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"287.034,-214.342 292.747,-205.419 282.717,-208.831 287.034,-214.342\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1617 --\u003e\n\u003cg id\u003d\"node3\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE1617\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-243\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-239.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE1617\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1617\u0026#45;\u0026gt;F2006080116CE21 --\u003e\n\u003cg id\u003d\"edge6\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080115CE1617\u0026#45;\u0026gt;F2006080116CE21\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M154.976,-227.919C183.887,-220.527 218.816,-211.595 248.655,-203.965\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"249.742,-207.3 258.563,-201.431 248.008,-200.518 249.742,-207.3\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1701 --\u003e\n\u003cg id\u003d\"node5\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE1701\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-187\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-183.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE1701\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1701\u0026#45;\u0026gt;F2006080116CE21 --\u003e\n\u003cg id\u003d\"edge8\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080115CE1701\u0026#45;\u0026gt;F2006080116CE21\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M192.057,-187C200.73,-187 209.518,-187 218.197,-187\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"218.324,-190.5 228.324,-187 218.324,-183.5 218.324,-190.5\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE5019 --\u003e\n\u003cg id\u003d\"node6\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE5019\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-131\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-127.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE5019\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE5019\u0026#45;\u0026gt;F2006080116CE21 --\u003e\n\u003cg id\u003d\"edge10\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080115CE5019\u0026#45;\u0026gt;F2006080116CE21\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M154.976,-146.081C183.887,-153.473 218.816,-162.405 248.655,-170.035\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"248.008,-173.482 258.563,-172.569 249.742,-166.7 248.008,-173.482\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1029 --\u003e\n\u003cg id\u003d\"node7\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE1029\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-75\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-71.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE1029\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1029\u0026#45;\u0026gt;F2006080116CE21 --\u003e\n\u003cg id\u003d\"edge12\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080115CE1029\u0026#45;\u0026gt;F2006080116CE21\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M157.246,-89.7207C169.03,-93.4245 181.091,-97.8444 192,-103 225.88,-119.012 260.817,-143.812 284.757,-162.321\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"282.717,-165.169 292.747,-168.581 287.034,-159.658 282.717,-165.169\"/\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1176 --\u003e\n\u003cg id\u003d\"node8\" class\u003d\"node\"\u003e\u003ctitle\u003eF2006080115CE1176\u003c/title\u003e\n\u003cellipse fill\u003d\"none\" stroke\u003d\"black\" cx\u003d\"96\" cy\u003d\"-19\" rx\u003d\"96.1665\" ry\u003d\"19.0919\"/\u003e\n\u003ctext text-anchor\u003d\"middle\" x\u003d\"96\" y\u003d\"-15.9\" font-family\u003d\"Times Roman,serif\" font-size\u003d\"14.00\"\u003eF2006080115CE1176\u003c/text\u003e\n\u003c/g\u003e\n\u003c!-- F2006080115CE1176\u0026#45;\u0026gt;F2006080116CE21 --\u003e\n\u003cg id\u003d\"edge14\" class\u003d\"edge\"\u003e\u003ctitle\u003eF2006080115CE1176\u0026#45;\u0026gt;F2006080116CE21\u003c/title\u003e\n\u003cpath fill\u003d\"none\" stroke\u003d\"black\" d\u003d\"M161.939,-32.8212C172.44,-36.5226 182.847,-41.1732 192,-47 237.956,-76.2537 276.669,-127.591 297.787,-159.306\"/\u003e\n\u003cpolygon fill\u003d\"black\" stroke\u003d\"black\" points\u003d\"295.12,-161.623 303.516,-168.084 300.982,-157.797 295.12,-161.623\"/\u003e\n\u003c/g\u003e\n\u003c/g\u003e\n\u003c/svg\u003e\n\n"
      },
      "dateCreated": "Jul 15, 2016 6:25:08 AM",
      "dateStarted": "Jul 17, 2016 3:44:38 AM",
      "dateFinished": "Jul 17, 2016 3:44:39 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n",
      "dateUpdated": "Jul 15, 2016 6:25:08 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468589108940_-1092236175",
      "id": "20160715-062508_2126220568",
      "dateCreated": "Jul 15, 2016 6:25:08 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "201-4 End-to-end MCS part 2",
  "id": "2BQ7J1433",
  "angularObjects": {
    "2BATG925A": [],
    "2BCTKA5P2": [],
    "2B9VMB5BB": [],
    "2BAA8ZT1F": [],
    "2BRSK8FXN": [],
    "2BCYFRWUC": [],
    "2BCC68R3T": [],
    "2BA8C2CJ4": [],
    "2B9AHSVAD": [],
    "2BCZV9QGQ": [],
    "2B9U51XQ6": [],
    "2B9VX5KPM": [],
    "2BAM6HXAB": [],
    "2B9AFX9BM": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}