{
  "paragraphs": [
    {
      "text": "%md\n#Overview: Graph Algorithm to-date in SciSpark\nThis notebook will demonstrate using SciSpark to:\n* read in netCDF files\n* mask areas in an array meeting a criteria \n* connect these areas via overlap between two time steps to form a graph object. \n* Search this graph object to find subgraphs meeting a minimum length criteria\n* Visualization \nThese are all the steps conducted to identify and track mesoscale convective systems (MCSs) as outlined in Whitehall et al. 2014.\n\n![The major steps of the GTG](https://raw.githubusercontent.com/SciSpark/scispark_zeppelin_notebooks/master/images/GTGSteps.png)                          \n               Figure 1: The major steps of the the Grab \u0027em, Tag \u0027em, Graph \u0027em algorithm\n\nFor this demonstration, hourly brightness temperature NCEP/CPC MERG dataset over location 5S - 40N, 60E - 90W is used. More information about the NCEP/CPC 4km MERG Dataset used for this demonstration can be found  [here] (http://mirador.gsfc.nasa.gov/collections/MERG__001.shtml).\n\u003cbr\u003e\n\n \n####Useful references\n* Palamuttam, R., R. Marroquín Mogrovejo, C. Mattmann, B. Wilson, K. Whitehall, R. Verma, L. McGibbney, and P. Ramirez, 2015. SciSpark: Applying In-memory Distributed Computing to Weather Event Detection and Tracking. In 2015 IEEE International Conference on Big Data (Big Data) on, pp. 1959 - 1965.\n\n* Whitehall, K., C. Mattmann, G. Jenkins, M. Rwebangira, B. Demoz, D.  Waliser, J. Kim, C. Goodale, A. Hart, P. Ramirez, M. Joyce, M. Boustani, P. Zimdars, P. Loikith, and H. Lee, 2014. Exploring a graph theory based algorithm for automated identification and characterization of large mesoscale convective systems in satellite datasets. Earth Science Informatics. DOI: 10.1007/s12145-014-0181-3\n\nNote that in the nomenclature used in this notebook, a *frame* indicates the date and time associated with a netCDF file.\n",
      "dateUpdated": "Jul 18, 2016 5:10:41 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467955779721_-1155975631",
      "id": "20160707-222939_1728297278",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eOverview: Graph Algorithm to-date in SciSpark\u003c/h1\u003e\n\u003cp\u003eThis notebook will demonstrate using SciSpark to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eread in netCDF files\u003c/li\u003e\n\u003cli\u003emask areas in an array meeting a criteria\u003c/li\u003e\n\u003cli\u003econnect these areas via overlap between two time steps to form a graph object.\u003c/li\u003e\n\u003cli\u003eSearch this graph object to find subgraphs meeting a minimum length criteria\u003c/li\u003e\n\u003cli\u003eVisualization\n\u003cbr  /\u003eThese are all the steps conducted to identify and track mesoscale convective systems (MCSs) as outlined in Whitehall et al. 2014.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://raw.githubusercontent.com/SciSpark/scispark_zeppelin_notebooks/master/images/GTGSteps.png\" alt\u003d\"The major steps of the GTG\" /\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e           Figure 1: The major steps of the the Grab \u0027em, Tag \u0027em, Graph \u0027em algorithm\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFor this demonstration, hourly brightness temperature NCEP/CPC MERG dataset over location 5S - 40N, 60E - 90W is used. More information about the NCEP/CPC 4km MERG Dataset used for this demonstration can be found  \u003ca href\u003d\"http://mirador.gsfc.nasa.gov/collections/MERG__001.shtml\"\u003ehere\u003c/a\u003e.\n\u003cbr  /\u003e\u003cbr\u003e\u003c/p\u003e\n\u003ch4\u003eUseful references\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003ePalamuttam, R., R. Marroquín Mogrovejo, C. Mattmann, B. Wilson, K. Whitehall, R. Verma, L. McGibbney, and P. Ramirez, 2015. SciSpark: Applying In-memory Distributed Computing to Weather Event Detection and Tracking. In 2015 IEEE International Conference on Big Data (Big Data) on, pp. 1959 - 1965.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cp\u003eWhitehall, K., C. Mattmann, G. Jenkins, M. Rwebangira, B. Demoz, D.  Waliser, J. Kim, C. Goodale, A. Hart, P. Ramirez, M. Joyce, M. Boustani, P. Zimdars, P. Loikith, and H. Lee, 2014. Exploring a graph theory based algorithm for automated identification and characterization of large mesoscale convective systems in satellite datasets. Earth Science Informatics. DOI: 10.1007/s12145-014-0181-3\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eNote that in the nomenclature used in this notebook, a \u003cem\u003eframe\u003c/em\u003e indicates the date and time associated with a netCDF file.\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 7, 2016 10:29:39 PM",
      "dateStarted": "Jul 18, 2016 5:10:41 PM",
      "dateFinished": "Jul 18, 2016 5:10:41 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Import libraries",
      "text": "//generic imports\nimport java.io._ //{ File, PrintWriter }\nimport java.text.SimpleDateFormat\nimport org.slf4j.Logger\nimport scala.collection.mutable\nimport scala.io.Source\nimport scala.language.implicitConversions\n// import java.io.{BufferedWriter, OutputStreamWriter}\nimport breeze.io.TextWriter.FileWriter\nimport org.apache.hadoop.conf._\nimport org.apache.hadoop.fs._\nimport org.apache.hadoop.io._\nimport org.apache.spark.rdd.RDD\n// import org.slf4j.Logger\n// import org.apache.spark.{SparkConf, SparkContext}\n// import scala.collection.mutable\nimport com.fasterxml.jackson.module.scala.JacksonModule\nimport scala.util.parsing.json.JSONObject\n\n//SciSpark imports\nimport org.dia.Parsers\nimport org.dia.core.{ SciSparkContext, SciTensor }\nimport org.dia.algorithms.mcc.{ MCCOps, MainDistGraphMCC, MCCNode, MCCEdge}\nimport org.dia.urlgenerators.{RandomDatesGenerator}",
      "dateUpdated": "Jul 18, 2016 5:44:56 PM",
      "config": {
        "lineNumbers": true,
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "colWidth": 12.0,
        "title": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467955779721_-1155975631",
      "id": "20160707-222939_433737775",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import java.io._\nimport java.text.SimpleDateFormat\nimport org.slf4j.Logger\nimport scala.collection.mutable\nimport scala.io.Source\nimport scala.language.implicitConversions\nimport breeze.io.TextWriter.FileWriter\nimport org.apache.hadoop.conf._\nimport org.apache.hadoop.fs._\nimport org.apache.hadoop.io._\nimport org.apache.spark.rdd.RDD\nimport com.fasterxml.jackson.module.scala.JacksonModule\nimport scala.util.parsing.json.JSONObject\nimport org.dia.Parsers\nimport org.dia.core.{SciSparkContext, SciTensor}\nimport org.dia.algorithms.mcc.{MCCOps, MainDistGraphMCC, MCCNode, MCCEdge}\nimport org.dia.urlgenerators.RandomDatesGenerator\n"
      },
      "dateCreated": "Jul 7, 2016 10:29:39 PM",
      "dateStarted": "Jul 18, 2016 5:44:56 PM",
      "dateFinished": "Jul 18, 2016 5:45:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Initalize the SciSpark Context",
      "text": "val dssc \u003d new SciSparkContext(sc)  ",
      "dateUpdated": "Jul 18, 2016 5:45:19 PM",
      "config": {
        "lineNumbers": true,
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "title": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467955779723_-1155206133",
      "id": "20160707-222939_1554635061",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "dssc: org.dia.core.SciSparkContext \u003d org.dia.core.SciSparkContext@2c03828b\n"
      },
      "dateCreated": "Jul 7, 2016 10:29:39 PM",
      "dateStarted": "Jul 18, 2016 5:45:19 PM",
      "dateFinished": "Jul 18, 2016 5:45:20 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load the Data",
      "text": "val partCount \u003d 4\nval varNames \u003d  List(\"ch4\", \"longitude\", \"latitude\")\nval hdfspath \u003d \"hdfs://localhost:9000/workshop_s3/201/merg\"\nval sRDD1n \u003d dssc.NetcdfDFSFile(hdfspath, varNames, partCount)",
      "dateUpdated": "Jul 18, 2016 5:45:22 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "tableHide": false,
        "lineNumbers": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468536996803_1975856868",
      "id": "20160714-155636_1460062085",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "partCount: Int \u003d 4\nvarNames: List[String] \u003d List(ch4, longitude, latitude)\nhdfspath: String \u003d hdfs://localhost:9000/workshop_s3/201/merg\nsRDD1n: org.apache.spark.rdd.RDD[org.dia.core.SciTensor] \u003d MapPartitionsRDD[10] at map at SciSparkContext.scala:142\n"
      },
      "dateCreated": "Jul 14, 2016 3:56:36 PM",
      "dateStarted": "Jul 18, 2016 5:45:22 PM",
      "dateFinished": "Jul 18, 2016 5:45:23 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Add metaData to the SciTensor",
      "text": "val labeled1n \u003d sRDD1n.map(p1 \u003d\u003e {\n    val source1 \u003d p1.metaData(\"SOURCE\").split(\"/\").last.split(\"_\")(1)\n    val FrameID1 \u003d source1.toInt\n    p1.insertDictionary((\"FRAME\", FrameID1.toString))\n    p1\n})\n\n//capture lat/lon information\nval coll \u003d labeled1n.collect()\nval lon \u003d coll(0).variables(\"longitude\").data\nval lat \u003d coll(0).variables(\"latitude\").data",
      "dateUpdated": "Jul 18, 2016 5:45:25 PM",
      "config": {
        "lineNumbers": true,
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "editorHide": false,
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467955779723_-1155206133",
      "id": "20160707-222939_630836910",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "labeled1n: org.apache.spark.rdd.RDD[org.dia.core.SciTensor] \u003d MapPartitionsRDD[11] at map at \u003cconsole\u003e:114\ncoll: Array[org.dia.core.SciTensor] \u003d \nArray(Variable in use \u003d ch4\nSet(ch4, longitude, latitude)\n(FRAME,2006091100)\n(SOURCE,hdfs://128.149.112.134:8090/data/resources/merg_2006091100_4km-pixel.nc)\n, Variable in use \u003d ch4\nSet(ch4, longitude, latitude)\n(FRAME,2006091101)\n(SOURCE,hdfs://128.149.112.134:8090/data/resources/merg_2006091101_4km-pixel.nc)\n, Variable in use \u003d ch4\nSet(ch4, longitude, latitude)\n(FRAME,2006091102)\n(SOURCE,hdfs://128.149.112.134:8090/data/resources/merg_2006091102_4km-pixel.nc)\n, Variable in use \u003d ch4\nSet(ch4, longitude, latitude)\n(FRAME,2006091103)\n(SOURCE,hdfs://128.149.112.134:8090/data/resources/merg_2006091103_4km-pixel.nc)\n, Variable in use \u003d ch4\nSet(ch4, longitude, latitude)\n(FRAME,2006091105)\n(SOURCE,hdfs://128.149.112.134:8090/data/resources/merg_200609110...lon: Array[Double] \u003d Array(-90.01818084716797, -89.98180389404297, -89.94541931152344, -89.90904235839844, -89.87266540527344, -89.83628845214844, -89.79991149902344, -89.76353454589844, -89.7271499633789, -89.6907730102539, -89.6543960571289, -89.6180191040039, -89.5816421508789, -89.54525756835938, -89.50888061523438, -89.47250366210938, -89.43612670898438, -89.39974975585938, -89.36337280273438, -89.32698822021484, -89.29061126708984, -89.25423431396484, -89.21785736083984, -89.18148040771484, -89.14509582519531, -89.10871887207031, -89.07234191894531, -89.03596496582031, -88.99958801269531, -88.96321105957031, -88.92682647705078, -88.89044952392578, -88.85407257080078, -88.81769561767578, -88.78131866455078, -88.74493408203125, -88.70855712890625, -88.67218017578125, -88.63580322265...lat: Array[Double] \u003d Array(-5.006255149841309, -4.969871520996094, -4.933487415313721, -4.897103786468506, -4.860720157623291, -4.824336528778076, -4.787952899932861, -4.7515692710876465, -4.715185642242432, -4.678802013397217, -4.642418384552002, -4.606034278869629, -4.569650650024414, -4.533267021179199, -4.496883392333984, -4.4604997634887695, -4.424116134643555, -4.38773250579834, -4.351348876953125, -4.31496524810791, -4.278581142425537, -4.242197513580322, -4.205813884735107, -4.169430255889893, -4.133046627044678, -4.096662998199463, -4.060279369354248, -4.023895740509033, -3.9875118732452393, -3.9511282444000244, -3.9147446155548096, -3.8783607482910156, -3.841977119445801, -3.805593490600586, -3.769209861755371, -3.732825994491577, -3.6964423656463623, -3.6600587368011475, -3.6..."
      },
      "dateCreated": "Jul 7, 2016 10:29:39 PM",
      "dateStarted": "Jul 18, 2016 5:45:25 PM",
      "dateFinished": "Jul 18, 2016 5:46:10 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Maintain the time series in the parallel environment",
      "text": "// keep the temperatures that are cooler than 241.0K\nval filtered1n \u003d labeled1n.map(p \u003d\u003e p(\"ch4\") \u003c\u003d 241.0)\n\n// link them in time\nval consecFrames1n \u003d filtered1n.flatMap(p \u003d\u003e {\n    List((p.metaData(\"FRAME\").toInt, p), (p.metaData(\"FRAME\").toInt + 1, p)) \n}).groupBy(_._1)\n    .map(p \u003d\u003e p._2.map(e \u003d\u003e e._2).toList) \n    .filter(p \u003d\u003e p.size \u003e 1) \n    .map(p \u003d\u003e p.sortBy(_.metaData(\"FRAME\").toInt))\n    .map(p \u003d\u003e (p(0), p(1)))",
      "dateUpdated": "Jul 18, 2016 5:46:13 PM",
      "config": {
        "lineNumbers": true,
        "enabled": true,
        "tableHide": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "colWidth": 12.0,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467955779724_-1157129877",
      "id": "20160707-222939_1761945113",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "filtered1n: org.apache.spark.rdd.RDD[org.dia.core.SciTensor] \u003d MapPartitionsRDD[12] at map at \u003cconsole\u003e:117\nconsecFrames1n: org.apache.spark.rdd.RDD[(org.dia.core.SciTensor, org.dia.core.SciTensor)] \u003d MapPartitionsRDD[19] at map at \u003cconsole\u003e:126\n"
      },
      "dateCreated": "Jul 7, 2016 10:29:39 PM",
      "dateStarted": "Jul 18, 2016 5:46:13 PM",
      "dateFinished": "Jul 18, 2016 5:46:15 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Find cloud elements and connect the cloud elements between frames\n*Cloud elements* are defined as contiguous regions where the temperature is atleast 241.0K and an area is met. 241K is a reasonable brightness temperature threshold for deep convection in detection in the Tropics (Machado et al. 1998).\n\nIn order to observe features are forming over time, it is necessary to connect *cloud elements* between *frames*. The connection, referred to as an *edge*, is created between *cloud elements* of consecutive *frames* if: \n* the area between consecutive frames is \u003e\u003d 2400.00 squared_km\nOR\n* the area between consecutive frames is \u003c 2400.00 squared_km and the convective fraction is \u003c 0.9. The convective fraction is defined as the ratio of minimum to maximum brightness temperature\n\n![Finding cloud elements](https://raw.githubusercontent.com/SciSpark/scispark_zeppelin_notebooks/master/images/sRDDtimeSeq.png)                          \n               Figure 2: Illustration of how the cloud elements and edges are determined\n\nThis algorithm was originally developed for use in West Africa. As such, this criteria follows discussions in the literature about the microphysical characterization of MCS features in the area of interest and previous temperature threshold implementations (Bouniol et al. 2010, Machado et al. 1993, Mapes and Houze 1993, Goyens et al. 2011)\n\nAt the end of this step, a sparely connected graph representing the  cloud elements found and their connectivity through out the user defined datasets. \n\nNotice the **sciTensor** is being passed around and manipulated.",
      "dateUpdated": "Jul 18, 2016 1:46:29 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467955779724_-1157129877",
      "id": "20160707-222939_1359505708",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eFind cloud elements and connect the cloud elements between frames\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eCloud elements\u003c/em\u003e are defined as contiguous regions where the temperature is atleast 241.0K and an area is met. 241K is a reasonable brightness temperature threshold for deep convection in detection in the Tropics (Machado et al. 1998).\u003c/p\u003e\n\u003cp\u003eIn order to observe features are forming over time, it is necessary to connect \u003cem\u003ecloud elements\u003c/em\u003e between \u003cem\u003eframes\u003c/em\u003e. The connection, referred to as an \u003cem\u003eedge\u003c/em\u003e, is created between \u003cem\u003ecloud elements\u003c/em\u003e of consecutive \u003cem\u003eframes\u003c/em\u003e if:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe area between consecutive frames is \u003e\u003d 2400.00 squared_km\n\u003cbr  /\u003eOR\u003c/li\u003e\n\u003cli\u003ethe area between consecutive frames is \u0026lt; 2400.00 squared_km and the convective fraction is \u0026lt; 0.9. The convective fraction is defined as the ratio of minimum to maximum brightness temperature\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src\u003d\"https://raw.githubusercontent.com/SciSpark/scispark_zeppelin_notebooks/master/images/sRDDtimeSeq.png\" alt\u003d\"Finding cloud elements\" /\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e           Figure 2: Illustration of how the cloud elements and edges are determined\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis algorithm was originally developed for use in West Africa. As such, this criteria follows discussions in the literature about the microphysical characterization of MCS features in the area of interest and previous temperature threshold implementations (Bouniol et al. 2010, Machado et al. 1993, Mapes and Houze 1993, Goyens et al. 2011)\u003c/p\u003e\n\u003cp\u003eAt the end of this step, a sparely connected graph representing the  cloud elements found and their connectivity through out the user defined datasets.\u003c/p\u003e\n\u003cp\u003eNotice the \u003cstrong\u003esciTensor\u003c/strong\u003e is being passed around and manipulated.\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 7, 2016 10:29:39 PM",
      "dateStarted": "Jul 18, 2016 1:46:29 PM",
      "dateFinished": "Jul 18, 2016 1:46:29 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Functions To connect the cloud elements",
      "text": "val componentFrameRDD1n \u003d consecFrames1n.flatMap({\n    case (t1, t2) \u003d\u003e {\n        val MCCEdgeList \u003d new mutable.MutableList[MCCEdge]\n        val MCCNodeMap \u003d new mutable.HashMap[String, MCCNode]()\n        \n        // set up some needed parameters\n        val maxAreaOverlapThreshold \u003d 0.66\n        val minAreaOverlapThreshold \u003d 0.50\n        val minArea \u003d 10000.    \n        val outerTemp \u003d 240.0\n        val innerTemp \u003d 220.0\n        \n        // find labelled components in consecutive frames\n        val (components1, _) \u003d MCCOps.labelConnectedComponents(t1.tensor) \n        val (components2, _) \u003d MCCOps.labelConnectedComponents(t2.tensor)\n        \n        // find the overlap\n        val productn \u003d components1 * components2\n        var overlappedPairsListn \u003d mutable.MutableList[((Double, Double))]()\n        var areaMinMaxTablen \u003d new mutable.HashMap[String, mutable.HashMap[String, Any]] //node metaData\n        \n        def updateComponent(label: Double, frame: String, value: Double, row: Int, col: Int): Unit \u003d {\n            if (label !\u003d 0.0) {\n                var area \u003d 0.0\n                var max \u003d Double.MinValue\n                var min \u003d Double.MaxValue\n                var rowMax \u003d 0.0\n                var colMax \u003d 0.0\n                var rowMin \u003d Double.MaxValue\n                var colMin \u003d Double.MaxValue\n\n                var grid \u003d new mutable.HashMap[String, Double]()\n                var currentProperties \u003d new mutable.HashMap[String, Double]()\n                var metadata \u003d new mutable.HashMap[String, Any]()\n               \n              if (areaMinMaxTablen.contains(frame + \":\" + label)) {\n                  metadata \u003d areaMinMaxTablen.get(frame + \":\" + label).get\n                  currentProperties \u003d metadata.get(\"properties\").getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n                  grid \u003d metadata.get(\"grid\").getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n                  area \u003d currentProperties.get(\"area\").get\n                  max \u003d currentProperties.get(\"maxTemp\").get\n                  min \u003d currentProperties.get(\"minTemp\").get\n                  rowMax \u003d currentProperties.get(\"rowMax\").get\n                  colMax \u003d currentProperties.get(\"colMax\").get\n                  rowMin \u003d currentProperties.get(\"rowMin\").get\n                  colMin \u003d currentProperties.get(\"colMin\").get\n\n                    if (value \u003c min) {\n                        min \u003d value\n                        currentProperties +\u003d ((\"minTemp\", min))\n                    } \n                    if (value \u003e max) {\n                        max \u003d value\n                        currentProperties +\u003d ((\"maxTemp\", max))\n                    }\n              } else {\n                  currentProperties +\u003d ((\"minTemp\", value))\n                  currentProperties +\u003d ((\"maxTemp\", value))\n              }\n            \n                rowMax \u003d if (row \u003e rowMax) row else rowMax\n                colMax \u003d if (col \u003e colMax) col else colMax\n                rowMin \u003d if (row \u003c rowMin) row else rowMin\n                colMin \u003d if (col \u003c colMin) col else colMin            \n                area +\u003d 1\n \n                currentProperties +\u003d ((\"area\", area))\n                currentProperties +\u003d ((\"rowMax\", rowMax))\n                currentProperties +\u003d ((\"colMax\", colMax))\n                currentProperties +\u003d ((\"rowMin\", rowMin))\n                currentProperties +\u003d ((\"colMin\", colMin))\n                \n                grid +\u003d ((s\"($row, $col)\", value))\n                metadata +\u003d ((\"properties\", currentProperties))\n                metadata +\u003d ((\"grid\", grid))\n                \n                // update edge object fields\n                areaMinMaxTablen +\u003d ((frame + \":\" + label, metadata))\n          }\n        }\n        \n        for (row \u003c- 0 to productn.rows - 1) {\n            for (col \u003c- 0 to productn.cols - 1) {\n                // Find non-zero points in product array \n                if (productn(row, col) !\u003d 0.0) {\n                    // save components ids \n                    val value1 \u003d components1(row, col)\n                    val value2 \u003d components2(row, col)\n                    overlappedPairsListn +\u003d ((value1, value2))\n                }\n                updateComponent(components1(row, col), t1.metaData(\"FRAME\"), t1.tensor(row, col), row, col)\n                updateComponent(components2(row, col), t2.metaData(\"FRAME\"), t2.tensor(row, col), row, col)\n            }\n        }\n        \n        //remove duplicates\n        var overlappedMapn \u003d overlappedPairsListn.groupBy(identity).mapValues(_.size)\n        // retrieve the edge list\n        val edgesSet \u003d overlappedPairsListn.toSet\n        \n        val edges \u003d edgesSet.map({ case (c1, c2) \u003d\u003e ((t1.metaData(\"FRAME\"), c1), (t2.metaData(\"FRAME\"), c2)) })\n        \n        val filtered \u003d edges.filter({\n            case ((frameId1, compId1), (frameId2, compId2)) \u003d\u003e {\n                val cloud1 \u003d areaMinMaxTablen(frameId1 + \":\" + compId1)(\"properties\").asInstanceOf[mutable.HashMap[String, Double]]\n                val (area1, min1, max1) \u003d (cloud1(\"area\"), cloud1(\"minTemp\"), cloud1(\"maxTemp\"))\n                val isCloud1 \u003d ((area1 \u003e\u003d 2400.0) || ((area1 \u003c 2400.0) \u0026\u0026 ((min1/max1) \u003c 0.9)))\n                val cloud2 \u003d areaMinMaxTablen(frameId2 + \":\" + compId2)(\"properties\").asInstanceOf[mutable.HashMap[String, Double]]\n                val (area2, max2, min2) \u003d (cloud2(\"area\"), cloud2(\"minTemp\"), cloud2(\"maxTemp\"))\n                val isCloud2 \u003d ((area2 \u003e\u003d 2400.0) || ((area2 \u003c 2400.0) \u0026\u0026 ((min2/max2) \u003c 0.9)))\n                var meetsCriteria \u003d true\n                \n                // edge criteria\n                if(isCloud1 \u0026\u0026 isCloud2) {\n                    val areaOverlap \u003d overlappedMapn.get(compId1, compId2).get\n                    val percentAreaOverlap \u003d math.max((areaOverlap / area1), (areaOverlap / area2))\n                    var edgeWeight \u003d 0\n                    if (percentAreaOverlap \u003e\u003d maxAreaOverlapThreshold) {\n                        edgeWeight \u003d 1\n                    } else if (percentAreaOverlap \u003c maxAreaOverlapThreshold \u0026\u0026\n                        percentAreaOverlap \u003e\u003d minAreaOverlapThreshold) {\n                        edgeWeight \u003d 2\n                    } else if (areaOverlap \u003e\u003d minArea) {\n                        edgeWeight \u003d 3\n                    }else {\n                         meetsCriteria \u003d false\n                    }\n                \n                    overlappedMapn +\u003d (((compId1, compId2), edgeWeight))\n                    if(meetsCriteria) {\n                        var node1: MCCNode \u003d new MCCNode(frameId1.toInt, compId1.toFloat)\n                        node1.setMetadata(areaMinMaxTablen(frameId1 + \":\" + compId1))\n                        var node2: MCCNode \u003d new MCCNode(frameId2.toInt, compId2.toFloat)\n                        node2.setMetadata(areaMinMaxTablen(frameId2 + \":\" + compId2))\n                        MCCEdgeList +\u003d new MCCEdge(node1, node2, edgeWeight)\n                    }\n                }\n                isCloud1 \u0026\u0026 isCloud2 \u0026\u0026 meetsCriteria\n            }\n          })\n          \n        MCCEdgeList\n    }\n    }) // end consecFrames1.flatMap",
      "dateUpdated": "Jul 18, 2016 5:46:20 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": false,
        "lineNumbers": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468530408265_-695631983",
      "id": "20160714-140648_1805358578",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "warning: there were 1 deprecation warning(s); re-run with -deprecation for details\ncomponentFrameRDD1n: org.apache.spark.rdd.RDD[org.dia.algorithms.mcc.MCCEdge] \u003d MapPartitionsRDD[20] at flatMap at \u003cconsole\u003e:120\n"
      },
      "dateCreated": "Jul 14, 2016 2:06:48 PM",
      "dateStarted": "Jul 18, 2016 5:46:20 PM",
      "dateFinished": "Jul 18, 2016 5:46:23 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Write EdgeList and Nodes to files",
      "text": "def updateLatLons(node: MCCNode): MCCNode \u003d {\n    val props:mutable.HashMap[String, Double] \u003d node.metadata.get(\"properties\")\n      .getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n    val xMax \u003d props.get(\"rowMax\").get\n    val xMin \u003d props.get(\"rowMin\").get\n    val yMax \u003d props.get(\"colMax\").get\n    val yMin \u003d props.get(\"colMin\").get\n\n    val latMax \u003d lat(xMax.toInt)\n    val latMin \u003d lat(xMin.toInt)\n    val lonMin \u003d lon(yMin.toInt)\n    val lonMax \u003d lon(yMax.toInt)\n    val centerLat \u003d (latMax+latMin)/2\n    val centerLon \u003d (lonMax+lonMin)/2\n\n    props +\u003d ((\"latMin\", latMin))\n    props +\u003d ((\"latMax\", latMax))\n    props +\u003d ((\"lonMin\", lonMin))\n    props +\u003d ((\"lonMax\", lonMax))\n    props +\u003d ((\"centerLat\", centerLat))\n    props +\u003d ((\"centerLon\", centerLon))\n     \n    return node\n}\n\n\nval MCCNodeMap \u003d new mutable.HashMap[String, MCCNode]()\nval componentFrameRDD_collected \u003d componentFrameRDD1n.collect()\ncomponentFrameRDD_collected.foreach{edge \u003d\u003e {\n  val srcKey \u003d s\"${edge.srcNode.frameNum},${edge.srcNode.cloudElemNum}\"\n  val destKey \u003d s\"${edge.destNode.frameNum},${edge.destNode.cloudElemNum}\"\n  \n  if (!MCCNodeMap.contains(srcKey)){\n    updateLatLons(edge.srcNode)\n    MCCNodeMap +\u003d ((srcKey, edge.srcNode))\n    }\n    if (!MCCNodeMap.contains(destKey)) {\n        updateLatLons(edge.destNode)\n    MCCNodeMap +\u003d ((destKey, edge.destNode))\n    }\n}}\nval pw \u003d new PrintWriter(\"MCCNodesLines.json\")\nMCCNodeMap.foreach{ case (key, value) \u003d\u003e {\n    pw.write(value.toString)\n    pw.write(\"\\n\")\n}}\npw.close()\n\nval MCCEdgeList \u003d componentFrameRDD_collected.toList\nval fw \u003d new java.io.FileWriter(new File(\"MCCEdges.txt\"))\nfw.write(MCCEdgeList.toString())\nfw.close()",
      "dateUpdated": "Jul 18, 2016 5:52:47 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "tableHide": false,
        "lineNumbers": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468539603735_1178764940",
      "id": "20160714-164003_1244964926",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "updateLatLons: (node: org.dia.algorithms.mcc.MCCNode)org.dia.algorithms.mcc.MCCNode\nMCCNodeMap: scala.collection.mutable.HashMap[String,org.dia.algorithms.mcc.MCCNode] \u003d Map()\ncomponentFrameRDD_collected: Array[org.dia.algorithms.mcc.MCCEdge] \u003d Array(((2006091100,251174.0) , (2006091101,539.0)), ((2006091100,2668082.0) , (2006091101,1618.0)), ((2006091100,224576.0) , (2006091101,484.0)), ((2006091100,2422186.0) , (2006091101,1534.0)), ((2006091100,3248136.0) , (2006091101,1832.0)), ((2006091100,1886040.0) , (2006091101,1352.0)), ((2006091100,1143905.0) , (2006091101,1015.0)), ((2006091100,600.0) , (2006091101,24.0)), ((2006091100,365349.0) , (2006091101,579.0)), ((2006091100,59690.0) , (2006091101,254.0)), ((2006091100,583663.0) , (2006091101,661.0)), ((2006091100,6006.0) , (2006091101,91.0)), ((2006091100,85728.0) , (2006091101,304.0)), ((2006091100,150920.0) , (2006091101,308.0)), ((2006091100,88704.0) , (2006091101,308.0)), ((2006091100,184184.0) , (200609...pw: java.io.PrintWriter \u003d java.io.PrintWriter@2e4dfd7d\nMCCEdgeList: List[org.dia.algorithms.mcc.MCCEdge] \u003d List(((2006091100,251174.0) , (2006091101,539.0)), ((2006091100,2668082.0) , (2006091101,1618.0)), ((2006091100,224576.0) , (2006091101,484.0)), ((2006091100,2422186.0) , (2006091101,1534.0)), ((2006091100,3248136.0) , (2006091101,1832.0)), ((2006091100,1886040.0) , (2006091101,1352.0)), ((2006091100,1143905.0) , (2006091101,1015.0)), ((2006091100,600.0) , (2006091101,24.0)), ((2006091100,365349.0) , (2006091101,579.0)), ((2006091100,59690.0) , (2006091101,254.0)), ((2006091100,583663.0) , (2006091101,661.0)), ((2006091100,6006.0) , (2006091101,91.0)), ((2006091100,85728.0) , (2006091101,304.0)), ((2006091100,150920.0) , (2006091101,308.0)), ((2006091100,88704.0) , (2006091101,308.0)), ((2006091100,184184.0) , (2006091101,308.0)), ((20...fw: java.io.FileWriter \u003d java.io.FileWriter@c73a2ff\n"
      },
      "dateCreated": "Jul 14, 2016 4:40:03 PM",
      "dateStarted": "Jul 18, 2016 5:52:47 PM",
      "dateFinished": "Jul 18, 2016 5:53:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Visualize intermediate results leveraging dataFrames",
      "text": "// create the row schema\ncase class MCCNodeRow(frameNum:String, cloudElemt:Int, centerLat:Double, centerLon:Double,ceArea:Double, maxTemp:Double, minTemp:Double)\n\n// extract needed infro from the list\nval MCCNodeMapList \u003d MCCNodeMap.map{case(key,value) \u003d\u003e{\n    val props \u003d value.metadata.get(\"properties\").getOrElse().asInstanceOf[mutable.HashMap[String, Double]]\n    (value.frameNum.toString, value.cloudElemNum.toInt, props.get(\"centerLat\").get, props.get(\"centerLon\").get, props.get(\"area\").get, props.get(\"maxTemp\").get, props.get(\"minTemp\").get)\n}}\n\n// create the table\nval MCCnMap \u003d sqlContext.sparkContext.parallelize(MCCNodeMapList.toSeq).map(v \u003d\u003e MCCNodeRow(v._1,v._2,v._3,v._4,v._5,v._6,v._7)).toDF()\n\n// register it\nMCCnMap.registerTempTable(\"cloud_elems_table1\")",
      "dateUpdated": "Jul 18, 2016 5:47:05 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468560779646_-2006139582",
      "id": "20160714-223259_1776956202",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "defined class MCCNodeRow\nMCCNodeMapList: scala.collection.mutable.Iterable[(String, Int, Double, Double, Double, Double, Double)] \u003d ArrayBuffer((2006091106,35448,5.708739519119263,-85.78010177612305,14769.0,241.0,199.0), (2006091104,325,5.363094806671143,-76.54000473022461,3808.0,241.0,192.0), (2006091103,2,-1.6953399181365967,-70.28293228149414,14529.0,241.0,194.0), (2006091109,430,8.0918710231781,-73.9753303527832,8851.0,241.0,193.0), (2006091111,1632,28.303006172180176,-31.794652938842773,11127.0,241.0,206.0), (2006091107,138,3.616677939891815,8.530730247497559,8780.0,241.0,206.0), (2006091100,59690,6.982168674468994,-83.32456588745117,17954.0,241.0,194.0), (2006091100,90288,5.508629560470581,8.057811975479126,1542.0,241.0,211.0), (2006091106,75361,8.819544553756714,-73.9571418762207,3891.0,241.0,204.0), (20...MCCnMap: org.apache.spark.sql.DataFrame \u003d [frameNum: string, cloudElemt: int, centerLat: double, centerLon: double, ceArea: double, maxTemp: double, minTemp: double]\n"
      },
      "dateCreated": "Jul 14, 2016 10:32:59 PM",
      "dateStarted": "Jul 18, 2016 5:47:05 PM",
      "dateFinished": "Jul 18, 2016 5:47:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ns \u003d sqlContext.sql(\"SELECT frameNum from cloud_elems_table1\")",
      "dateUpdated": "Jul 18, 2016 1:46:29 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468869114843_907993857",
      "id": "20160718-121154_1297748095",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jul 18, 2016 12:11:54 PM",
      "dateStarted": "Jul 18, 2016 1:47:35 PM",
      "dateFinished": "Jul 18, 2016 1:47:35 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select * from cloud_elems_table1",
      "dateUpdated": "Jul 18, 2016 1:46:31 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "scatterChart",
          "height": 300.0,
          "optionOpen": true,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "centerLat",
              "index": 2.0,
              "aggr": "sum"
            },
            "xAxis": {
              "name": "centerLon",
              "index": 3.0,
              "aggr": "sum"
            },
            "size": {
              "name": "ceArea",
              "index": 4.0,
              "aggr": "sum"
            },
            "group": {
              "name": "frameNum",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468565495662_-1449284807",
      "id": "20160714-235135_1416023052",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "frameNum\tcloudElemt\tcenterLat\tcenterLon\tceArea\tmaxTemp\tminTemp\n2006091106\t35448\t5.708739519119263\t-85.78010177612305\t14769.0\t241.0\t199.0\n2006091104\t325\t5.363094806671143\t-76.54000473022461\t3808.0\t241.0\t192.0\n2006091103\t2\t-1.6953399181365967\t-70.28293228149414\t14529.0\t241.0\t194.0\n2006091109\t430\t8.0918710231781\t-73.9753303527832\t8851.0\t241.0\t193.0\n2006091111\t1632\t28.303006172180176\t-31.794652938842773\t11127.0\t241.0\t206.0\n2006091107\t138\t3.616677939891815\t8.530730247497559\t8780.0\t241.0\t206.0\n2006091100\t59690\t6.982168674468994\t-83.32456588745117\t17954.0\t241.0\t194.0\n2006091100\t90288\t5.508629560470581\t8.057811975479126\t1542.0\t241.0\t211.0\n2006091106\t75361\t8.819544553756714\t-73.9571418762207\t3891.0\t241.0\t204.0\n2006091102\t21\t-3.1506871581077576\t-77.4130859375\t3047.0\t241.0\t211.0\n2006091110\t417\t7.9645280838012695\t-74.12084579467773\t9416.0\t241.0\t192.0\n2006091106\t119\t-2.896001398563385\t57.7506160736084\t5227.0\t241.0\t204.0\n2006091109\t151578\t7.673458576202393\t-34.23200225830078\t7823.0\t241.0\t196.0\n2006091100\t365349\t8.492091178894043\t-31.667329788208008\t1590.0\t241.0\t202.0\n2006091106\t824\t11.839390277862549\t30.04851531982422\t3775.0\t241.0\t212.0\n2006091105\t31133\t4.544461965560913\t8.239703893661499\t5393.0\t241.0\t205.0\n2006091106\t1565649\t19.534539222717285\t-55.695220947265625\t5266.0\t241.0\t201.0\n2006091104\t1227600\t14.040603160858154\t-88.79950714111328\t3909.0\t241.0\t199.0\n2006091104\t783604\t12.148651599884033\t24.555386543273926\t7567.0\t241.0\t196.0\n2006091108\t17820\t3.543910562992096\t7.985055685043335\t7069.0\t241.0\t205.0\n2006091103\t1106583\t13.021860122680664\t-12.93248701095581\t3544.0\t241.0\t187.0\n2006091110\t180\t5.3449026346206665\t-79.57759857177734\t11822.0\t241.0\t191.0\n2006091105\t94080\t5.4904375076293945\t-64.02585792541504\t2118.0\t241.0\t207.0\n2006091100\t388007\t9.547218322753906\t-47.92844581604004\t2194.0\t241.0\t205.0\n2006091105\t115934\t7.728034019470215\t-16.461186408996582\t12635.0\t241.0\t200.0\n2006091106\t343\t7.600691318511963\t-16.40661859512329\t15426.0\t241.0\t198.0\n2006091109\t2160756\t27.64810085296631\t-34.632164001464844\t2287.0\t241.0\t216.0\n2006091103\t141642\t7.509731769561768\t-31.33992576599121\t6711.0\t241.0\t198.0\n2006091108\t1685\t35.30686569213867\t11.022645950317383\t4724.0\t241.0\t209.0\n2006091104\t24200\t3.452951431274414\t-66.86336898803711\t940.0\t241.0\t206.0\n2006091102\t1045\t13.403888702392578\t35.75991439819336\t6135.0\t241.0\t202.0\n2006091104\t1453032\t16.132665157318115\t-88.41753387451172\t75.0\t241.0\t206.0\n2006091106\t199\t4.526270031929016\t-69.15520477294922\t6087.0\t241.0\t205.0\n2006091108\t580\t8.946887254714966\t-73.79344177246094\t6234.0\t241.0\t191.0\n2006091103\t1108\t13.986027240753174\t-88.54485702514648\t5301.0\t241.0\t197.0\n2006091101\t661\t9.547218322753906\t-48.364986419677734\t3865.0\t241.0\t208.0\n2006091108\t1323\t25.756149291992188\t9.49475622177124\t2570.0\t241.0\t212.0\n2006091107\t1415565\t19.680073738098145\t-55.34962463378906\t4607.0\t241.0\t201.0\n2006091106\t172420\t8.16463828086853\t-33.249786376953125\t6440.0\t241.0\t199.0\n2006091105\t191\t4.562653660774231\t8.239703893661499\t6282.0\t241.0\t205.0\n2006091102\t1\t-4.824336767196655\t-75.12125015258789\t111.0\t240.0\t206.0\n2006091111\t767\t8.71039366722107\t22.754658699035645\t3422.0\t241.0\t194.0\n2006091102\t490\t9.674561262130737\t-15.333457469940186\t15890.0\t241.0\t200.0\n2006091102\t430\t6.672907114028931\t-31.139843940734863\t3488.0\t241.0\t203.0\n2006091109\t1609092\t16.405542373657227\t-88.63580322265625\t3017.0\t241.0\t194.0\n2006091110\t207\t5.326711177825928\t-86.41672134399414\t15215.0\t241.0\t197.0\n2006091103\t259\t4.853723049163818\t8.403406143188477\t4200.0\t241.0\t207.0\n2006091106\t1005\t13.021860122680664\t-13.332649230957031\t9510.0\t241.0\t189.0\n2006091107\t1459140\t20.043910026550293\t-57.05940818786621\t875.0\t241.0\t206.0\n2006091111\t1620\t26.35647964477539\t10.40421438217163\t2697.0\t241.0\t218.0\n2006091105\t808980\t10.747879981994629\t-42.43531799316406\t23.0\t240.0\t205.0\n2006091109\t467\t7.255046367645264\t-16.861347675323486\t8490.0\t241.0\t201.0\n2006091103\t940023\t11.257251262664795\t-48.98341751098633\t19.0\t241.0\t216.0\n2006091104\t778592\t12.239611148834229\t31.612784385681152\t3141.0\t241.0\t208.0\n2006091104\t189\t-3.16887891292572\t57.78699493408203\t3881.0\t241.0\t201.0\n2006091105\t67067\t7.527923583984375\t-76.24897766113281\t1746.0\t241.0\t211.0\n2006091104\t677250\t10.838839054107666\t-45.49109649658203\t4773.0\t241.0\t200.0\n2006091109\t1454\t26.447439193725586\t9.84035062789917\t2706.0\t241.0\t213.0\n2006091102\t1028280\t12.967284202575684\t35.39613151550293\t3769.0\t241.0\t202.0\n2006091101\t1183\t15.168497085571289\t-86.3621597290039\t2433.0\t241.0\t208.0\n2006091100\t2422186\t22.881837844848633\t-80.86902618408203\t2436.0\t241.0\t200.0\n2006091108\t255\t5.326711058616638\t-72.28374099731445\t3630.0\t241.0\t196.0\n2006091110\t1848\t36.14369201660156\t11.24091625213623\t5558.0\t241.0\t206.0\n2006091103\t426\t8.146446466445923\t-15.769997119903564\t15339.0\t241.0\t196.0\n2006091105\t1728\t28.32119846343994\t-33.37711048126221\t5463.0\t241.0\t211.0\n2006091101\t97944\t6.236303091049194\t-77.1038703918457\t4880.0\t241.0\t194.0\n2006091107\t60945\t5.290327310562134\t-72.13822555541992\t2626.0\t241.0\t194.0\n2006091102\t318\t6.472796678543091\t-77.23119354248047\t8078.0\t241.0\t194.0\n2006091104\t1690\t34.160780906677246\t-63.061832427978516\t43016.0\t241.0\t199.0\n2006091109\t401\t7.691650390625\t-34.23200225830078\t10347.0\t241.0\t196.0\n2006091106\t320\t5.4904375076293945\t-63.89853286743164\t3036.0\t241.0\t212.0\n2006091109\t869176\t11.348210334777832\t-43.69037055969238\t10245.0\t241.0\t199.0\n2006091100\t177100\t7.691650390625\t-78.66814041137695\t237.0\t241.0\t212.0\n2006091110\t3666432\t36.14369201660156\t11.259105205535889\t5046.0\t241.0\t206.0\n2006091101\t241570\t6.40002965927124\t-13.441783905029297\t86.0\t241.0\t216.0\n2006091111\t1424\t16.460118293762207\t-88.58123397827148\t3631.0\t241.0\t204.0\n2006091106\t329\t6.054384708404541\t-30.81243896484375\t3473.0\t241.0\t209.0\n2006091109\t179310\t7.982719659805298\t-74.06627655029297\t7752.0\t241.0\t193.0\n2006091105\t32318\t4.16243314743042\t-80.21421813964844\t1336.0\t241.0\t207.0\n2006091104\t396\t8.000911712646484\t-15.715429782867432\t15432.0\t241.0\t196.0\n2006091100\t1152\t-2.5321645736694336\t59.49677848815918\t37.0\t241.0\t213.0\n2006091105\t26243\t2.743469476699829\t8.203325510025024\t197.0\t241.0\t210.0\n2006091105\t206\t5.745123386383057\t-85.16167068481445\t16383.0\t241.0\t201.0\n2006091104\t133848\t7.873568534851074\t-15.715429782867432\t12716.0\t241.0\t196.0\n2006091110\t595192\t8.928695678710938\t20.60833740234375\t27.0\t239.0\t213.0\n2006091103\t1780\t34.21535587310791\t-64.2805061340332\t46271.0\t241.0\t201.0\n2006091105\t1362636\t15.586909770965576\t-88.65399169921875\t2185.0\t241.0\t201.0\n2006091105\t104951\t6.127151966094971\t-30.68511390686035\t3034.0\t241.0\t207.0\n2006091111\t398\t7.455156326293945\t-34.85043430328369\t9109.0\t241.0\t202.0\n2006091110\t876480\t11.457361698150635\t-43.61761283874512\t11737.0\t241.0\t200.0\n2006091110\t192237\t7.946336030960083\t-74.44824981689453\t8050.0\t241.0\t192.0\n2006091107\t745\t10.984374046325684\t-44.672584533691406\t9906.0\t241.0\t199.0\n2006091100\t3138210\t30.340493202209473\t-65.79020690917969\t4725.0\t241.0\t195.0\n2006091109\t221358\t7.273238182067871\t-16.824968814849854\t7580.0\t241.0\t201.0\n2006091107\t348\t-3.5509077310562134\t59.51496696472168\t134.0\t241.0\t210.0\n2006091102\t1224576\t12.78536605834961\t-14.26029634475708\t349.0\t241.0\t201.0\n2006091109\t942\t11.166292190551758\t24.027901649475098\t2850.0\t241.0\t222.0\n2006091103\t883134\t11.093524932861328\t-45.4001522064209\t1830.0\t241.0\t203.0\n2006091111\t1657\t27.775443077087402\t-35.23240661621094\t4008.0\t241.0\t215.0\n2006091100\t417722\t9.092422008514404\t-35.377920150756836\t1859.0\t241.0\t198.0\n2006091105\t839\t12.039500713348389\t31.55821704864502\t4946.0\t241.0\t214.0\n2006091105\t294\t5.99980902671814\t-63.734832763671875\t4214.0\t241.0\t207.0\n2006091104\t89375\t5.363094806671143\t-76.48543930053711\t3631.0\t241.0\t192.0\n2006091109\t1850948\t19.49815559387207\t-55.731597900390625\t5047.0\t241.0\t202.0\n2006091102\t166410\t6.636523485183716\t-31.10346508026123\t2665.0\t241.0\t203.0\n2006091105\t1756\t33.45129871368408\t-62.73443031311035\t60078.0\t241.0\t193.0\n2006091106\t17\t-2.986960709095001\t57.7506160736084\t5745.0\t241.0\t204.0\n2006091101\t67310\t6.309070348739624\t-84.07032012939453\t13405.0\t241.0\t194.0\n2006091105\t3775212\t35.506975173950195\t11.24091625213623\t2589.0\t241.0\t204.0\n2006091105\t996012\t12.676215171813965\t22.62733554840088\t28.0\t241.0\t215.0\n2006091110\t1269\t16.460118293762207\t-88.56304550170898\t3610.0\t241.0\t200.0\n2006091104\t197392\t7.2914299964904785\t-19.37145233154297\t351.0\t241.0\t197.0\n2006091108\t410\t7.509731769561768\t-16.679455280303955\t8224.0\t241.0\t196.0\n2006091108\t381\t7.96452784538269\t-33.468058586120605\t8915.0\t241.0\t200.0\n2006091106\t1899\t35.59793663024902\t11.204537868499756\t3806.0\t241.0\t208.0\n2006091110\t107670\t5.072025299072266\t20.26274299621582\t243.0\t241.0\t205.0\n2006091104\t1947264\t19.261661529541016\t-55.167734146118164\t6287.0\t241.0\t198.0\n2006091111\t461\t8.019103765487671\t-74.46643829345703\t9167.0\t241.0\t196.0\n2006091106\t2756897\t31.03178310394287\t10.54972791671753\t1734.0\t241.0\t213.0\n2006091111\t1884\t35.41601753234863\t-62.534345626831055\t35808.0\t241.0\t193.0\n2006091101\t3\t1.1062037944793701\t-69.62812423706055\t29321.0\t241.0\t195.0\n2006091103\t256\t6.090768337249756\t-84.61599731445312\t14985.0\t241.0\t194.0\n2006091101\t197800\t6.836633682250977\t-30.757871627807617\t2318.0\t241.0\t204.0\n2006091101\t1060675\t13.367504596710205\t35.88723945617676\t4892.0\t241.0\t203.0\n2006091102\t1600\t22.990988731384277\t-81.36013412475586\t2454.0\t241.0\t213.0\n2006091105\t338\t7.837184906005859\t-16.55213165283203\t16283.0\t241.0\t200.0\n2006091100\t94503\t5.945233583450317\t-68.68228530883789\t1769.0\t241.0\t194.0\n2006091101\t327\t5.945233583450317\t-68.73685455322266\t2575.0\t241.0\t191.0\n2006091104\t219961\t7.7098424434661865\t-77.4312744140625\t4353.0\t241.0\t202.0\n2006091105\t9\t-3.0779197216033936\t57.350454330444336\t5190.0\t241.0\t197.0\n2006091101\t1770\t30.340493202209473\t-65.53556060791016\t5483.0\t241.0\t198.0\n2006091100\t3248136\t35.37963390350342\t-63.35285949707031\t32494.0\t241.0\t197.0\n2006091101\t1967160\t19.24346923828125\t-55.004032135009766\t8029.0\t241.0\t195.0\n2006091107\t126\t4.489886283874512\t-78.0133285522461\t10856.0\t241.0\t191.0\n2006091111\t315\t5.0720250606536865\t-72.32011795043945\t4562.0\t241.0\t198.0\n2006091100\t198720\t7.091319799423218\t-30.575980186462402\t1868.0\t241.0\t206.0\n2006091111\t291\t4.471694469451904\t20.75385093688965\t4197.0\t241.0\t197.0\n2006091104\t367\t6.254494905471802\t-69.44623184204102\t3359.0\t241.0\t206.0\n2006091100\t1886040\t19.934760093688965\t-54.87670707702637\t9473.0\t241.0\t199.0\n2006091107\t140970\t7.946336269378662\t-33.35892295837402\t7117.0\t241.0\t200.0\n2006091104\t903\t10.838839054107666\t-45.4547176361084\t5503.0\t241.0\t200.0\n2006091101\t17\t-2.841425895690918\t-77.08567810058594\t4078.0\t241.0\t205.0\n2006091102\t3396240\t35.97996425628662\t-63.88034439086914\t28124.0\t241.0\t199.0\n2006091103\t61440\t5.7996989488601685\t-85.05253601074219\t12443.0\t241.0\t194.0\n2006091107\t1539\t35.45240020751953\t11.277294635772705\t4695.0\t241.0\t208.0\n2006091104\t10\t-2.568548336625099\t-71.95633316040039\t10858.0\t241.0\t193.0\n2006091105\t441\t8.273789167404175\t-32.94057083129883\t6636.0\t241.0\t198.0\n2006091108\t294\t5.7451231479644775\t-30.44865608215332\t2942.0\t241.0\t208.0\n2006091110\t72750\t3.5075267553329468\t19.753446578979492\t159.0\t241.0\t204.0\n2006091102\t637\t8.946887493133545\t-31.831031799316406\t3153.0\t241.0\t197.0\n2006091101\t1618\t27.32064723968506\t-84.3977279663086\t3185.0\t241.0\t208.0\n2006091102\t265\t6.19991934299469\t-84.70694351196289\t16016.0\t241.0\t192.0\n2006091101\t534\t3.0527308583259583\t-66.66328811645508\t4808.0\t241.0\t198.0\n2006091103\t984\t12.767174243927002\t35.305185317993164\t4632.0\t241.0\t208.0\n2006091108\t12\t-2.8596177101135254\t56.93210411071777\t8314.0\t241.0\t204.0\n2006091108\t60690\t5.326711058616638\t-72.32011795043945\t3337.0\t241.0\t196.0\n2006091101\t1204050\t14.004219055175781\t-88.39934539794922\t4289.0\t241.0\t191.0\n2006091105\t83941\t8.946887493133545\t-73.15681838989258\t1801.0\t241.0\t210.0\n2006091102\t211722\t6.4546051025390625\t-18.607507705688477\t384.0\t241.0\t207.0\n2006091100\t1143905\t13.349312782287598\t35.72353553771973\t4892.0\t241.0\t200.0\n2006091103\t328\t5.490437746047974\t-76.43087005615234\t3562.0\t241.0\t192.0\n2006091108\t185\t5.435862064361572\t-86.12569427490234\t16316.0\t241.0\t195.0\n2006091108\t859\t11.9667329788208\t23.7368745803833\t5711.0\t241.0\t216.0\n2006091107\t370\t7.946336269378662\t-33.37711143493652\t8154.0\t241.0\t200.0\n2006091107\t2593215\t35.416015625\t10.968079090118408\t3831.0\t241.0\t208.0\n2006091105\t153\t-3.059727907180786\t57.8961296081543\t4512.0\t241.0\t197.0\n2006091101\t57\t-2.3684379011392593\t-70.17379760742188\t7384.0\t241.0\t195.0\n2006091108\t84000\t7.982719898223877\t-79.46846389770508\t338.0\t241.0\t198.0\n2006091104\t1765\t35.124948501586914\t-69.37347412109375\t5172.0\t241.0\t215.0\n2006091102\t2236385\t20.535090446472168\t-55.07678985595703\t34.0\t238.0\t211.0\n2006091108\t1711820\t18.606755256652832\t-57.495948791503906\t246.0\t241.0\t216.0\n2006091101\t1534\t22.936413764953613\t-80.9235954284668\t2868.0\t241.0\t206.0\n2006091109\t1482\t27.775443077087402\t-34.55940628051758\t2870.0\t241.0\t214.0\n2006091101\t304\t5.290327429771423\t7.930487871170044\t2506.0\t241.0\t209.0\n2006091109\t391\t-2.7140828669071198\t57.02305030822754\t6963.0\t241.0\t206.0\n2006091106\t1663\t28.4667329788208\t-33.46805667877197\t6951.0\t241.0\t209.0\n2006091106\t820245\t12.43972110748291\t-46.782527923583984\t34.0\t240.0\t209.0\n2006091102\t1908\t35.72527885437012\t-63.89853286743164\t36134.0\t241.0\t199.0\n2006091103\t3008200\t34.21535587310791\t-63.29829406738281\t34294.0\t241.0\t201.0\n2006091106\t803110\t12.3123779296875\t-46.36417579650879\t43.0\t241.0\t208.0\n2006091102\t229491\t7.491540193557739\t-32.92238235473633\t225.0\t241.0\t204.0\n2006091110\t591357\t8.801352977752686\t20.89936351776123\t19.0\t237.0\t208.0\n2006091105\t1938816\t19.35262107849121\t-55.56789588928223\t6074.0\t241.0\t198.0\n2006091110\t24\t-2.6776992082595825\t-73.70249557495117\t7898.0\t241.0\t204.0\n2006091110\t378\t7.600691080093384\t-34.34113788604736\t10481.0\t241.0\t201.0\n2006091109\t3328248\t35.979963302612305\t11.277294635772705\t4145.0\t241.0\t208.0\n2006091107\t1178226\t15.950746536254883\t-88.70855712890625\t2615.0\t241.0\t195.0\n2006091103\t1976307\t19.29804515838623\t-55.0585994720459\t6819.0\t241.0\t198.0\n2006091105\t43466\t5.745123386383057\t-85.56183242797852\t14270.0\t241.0\t201.0\n2006091104\t2\t-1.6953399181365967\t-70.3738784790039\t18022.0\t241.0\t193.0\n2006091107\t1677564\t26.1381778717041\t9.294675350189209\t1281.0\t241.0\t208.0\n2006091101\t91\t-0.07626593112945557\t22.027092933654785\t3985.0\t241.0\t199.0\n2006091102\t492\t-3.932936429977417\t58.60550880432129\t72.0\t241.0\t206.0\n2006091103\t12\t-3.296221971511841\t57.53234672546387\t4358.0\t241.0\t204.0\n2006091103\t802672\t12.112267971038818\t24.86460304260254\t6558.0\t241.0\t195.0\n2006091102\t919600\t12.185035228729248\t30.321353912353516\t2907.0\t241.0\t207.0\n2006091104\t266\t4.762763857841492\t8.148757696151733\t4937.0\t241.0\t207.0\n2006091102\t1150\t14.040602684020996\t-88.39934539794922\t4989.0\t241.0\t195.0\n2006091106\t14\t-2.7322747707366943\t-71.81082153320312\t12942.0\t241.0\t206.0\n2006091110\t1059840\t11.821198463439941\t-49.36539077758789\t19.0\t240.0\t214.0\n2006091108\t277\t5.726931571960449\t-75.28495407104492\t2479.0\t241.0\t196.0\n2006091107\t1317\t28.84876251220703\t-33.413490295410156\t8356.0\t241.0\t206.0\n2006091107\t1446\t34.63376808166504\t-63.82577896118164\t40088.0\t241.0\t193.0\n2006091105\t2112318\t20.04391098022461\t-57.58689308166504\t120.0\t240.0\t210.0\n2006091103\t800058\t10.34765911102295\t-48.85609245300293\t852.0\t241.0\t205.0\n2006091106\t109296\t5.617780447006226\t-28.77525234222412\t377.0\t241.0\t212.0\n2006091104\t240\t5.65416407585144\t-85.10710525512695\t14544.0\t241.0\t195.0\n2006091107\t7\t-3.005152404308319\t57.314077377319336\t7056.0\t241.0\t206.0\n2006091109\t1445\t27.866402626037598\t-32.10386848449707\t9892.0\t241.0\t203.0\n2006091100\t224576\t6.5455641746521\t-15.187943935394287\t263.0\t241.0\t205.0\n2006091106\t42\t-2.7322747707366943\t-72.21098327636719\t10763.0\t241.0\t206.0\n2006091106\t466\t8.201021909713745\t-33.12246227264404\t7634.0\t241.0\t199.0\n2006091108\t950808\t13.185586929321289\t-13.860134601593018\t12580.0\t241.0\t189.0\n2006091104\t21\t-3.1870707273483276\t57.78699493408203\t4717.0\t241.0\t201.0\n2006091108\t191470\t7.382389068603516\t-16.77040147781372\t6754.0\t241.0\t196.0\n2006091103\t1063\t13.021860122680664\t-13.114378929138184\t3873.0\t241.0\t187.0\n2006091106\t58968\t6.600139856338501\t-74.2481689453125\t198.0\t241.0\t212.0\n2006091110\t3278160\t35.4342098236084\t-62.93450736999512\t30058.0\t241.0\t192.0\n2006091103\t1\t-1.6225725412368774\t-70.51939392089844\t17736.0\t241.0\t194.0\n2006091105\t1408\t19.51634693145752\t-55.185922622680664\t8124.0\t241.0\t198.0\n2006091111\t167\t3.562102258205414\t7.221110224723816\t9726.0\t241.0\t208.0\n2006091107\t1850385\t28.557692527770996\t-33.52262496948242\t5855.0\t241.0\t206.0\n2006091110\t537667\t8.310173034667969\t21.73606586456299\t13.0\t240.0\t205.0\n2006091108\t2\t-2.150135964155197\t-72.84760665893555\t11660.0\t241.0\t200.0\n2006091102\t127920\t5.272135496139526\t-74.63014221191406\t31.0\t240.0\t214.0\n2006091102\t564\t-3.696442484855652\t59.55134391784668\t43.0\t240.0\t207.0\n2006091102\t1308553\t14.00421953201294\t-11.622867107391357\t10.0\t241.0\t206.0\n2006091100\t88704\t6.127151727676392\t-77.17662811279297\t2878.0\t241.0\t196.0\n2006091103\t1429\t19.2252779006958\t-54.7493839263916\t8086.0\t241.0\t198.0\n2006091106\t621330\t10.893414497375488\t-43.29020881652832\t5916.0\t241.0\t195.0\n2006091101\t1352\t20.04391098022461\t-54.8948974609375\t10799.0\t241.0\t195.0\n2006091103\t296826\t9.219764709472656\t-33.72270584106445\t22.0\t237.0\t210.0\n2006091110\t223\t4.671804785728455\t-72.55657958984375\t4782.0\t241.0\t191.0\n2006091105\t625500\t10.784263610839844\t-43.453908920288086\t4968.0\t241.0\t197.0\n2006091102\t950\t13.567615032196045\t27.79305934906006\t20523.0\t241.0\t189.0\n2006091109\t1364\t19.77103328704834\t-55.80435562133789\t6586.0\t241.0\t202.0\n2006091111\t21\t-2.65950745344162\t57.4414005279541\t9503.0\t241.0\t207.0\n2006091105\t691336\t11.657472133636475\t30.10308265686035\t2267.0\t241.0\t214.0\n2006091108\t1437912\t16.16904878616333\t-88.65399169921875\t2669.0\t241.0\t191.0\n2006091109\t25200\t5.417670130729675\t-79.46846389770508\t9515.0\t241.0\t189.0\n2006091101\t484\t10.074781656265259\t-15.11518669128418\t17677.0\t241.0\t191.0\n2006091101\t1047\t13.658574104309082\t-88.32658767700195\t4861.0\t241.0\t191.0\n2006091101\t489540\t9.45625925064087\t-36.92399978637695\t32.0\t241.0\t212.0\n2006091105\t70\t-2.6413156986236572\t-71.68349838256836\t11199.0\t241.0\t202.0\n2006091102\t126024\t5.963425397872925\t-68.99150085449219\t2674.0\t241.0\t194.0\n2006091102\t354\t6.072576522827148\t-68.97331237792969\t2888.0\t241.0\t194.0\n2006091110\t1441\t26.229137420654297\t10.076809406280518\t3419.0\t241.0\t214.0\n2006091109\t2096695\t28.066513061523438\t-31.449060440063477\t7453.0\t241.0\t203.0\n2006091102\t3358860\t34.92483711242676\t-70.50120162963867\t2246.0\t241.0\t215.0\n2006091110\t120765\t5.25394344329834\t20.917552947998047\t11.0\t240.0\t210.0\n2006091104\t1439640\t16.005321979522705\t-87.7081527709961\t81.0\t240.0\t205.0\n2006091101\t792\t-3.187070846557617\t57.91431999206543\t2419.0\t241.0\t202.0\n2006091100\t795440\t13.749533653259277\t28.28416633605957\t24252.0\t241.0\t191.0\n2006091102\t1274200\t14.040602684020996\t-88.54485702514648\t4700.0\t241.0\t195.0\n2006091104\t1100\t13.967835903167725\t-88.69037246704102\t5035.0\t241.0\t199.0\n2006091105\t799806\t10.493193626403809\t-43.417531967163086\t8.0\t237.0\t210.0\n2006091110\t1024\t13.276545524597168\t-14.605891227722168\t15117.0\t241.0\t187.0\n2006091108\t809178\t11.239059448242188\t24.027901649475098\t2693.0\t241.0\t217.0\n2006091108\t153\t4.70818829536438\t-79.30475997924805\t8941.0\t241.0\t190.0\n2006091110\t103305\t4.762763977050781\t21.881579399108887\t38.0\t239.0\t208.0\n2006091106\t1682\t33.37853145599365\t-61.91591453552246\t56765.0\t241.0\t172.0\n2006091101\t117342\t5.545013189315796\t-75.68511581420898\t628.0\t241.0\t198.0\n2006091108\t1333\t26.62935733795166\t-30.284953117370605\t2979.0\t241.0\t202.0\n2006091108\t35335\t5.472245812416077\t-86.08932113647461\t12889.0\t241.0\t195.0\n2006091110\t1458\t27.42979907989502\t-35.014137268066406\t3297.0\t241.0\t214.0\n2006091103\t899388\t11.275443077087402\t-41.88964080810547\t568.0\t241.0\t212.0\n2006091100\t583663\t9.456258773803711\t-50.38398361206055\t91.0\t238.0\t214.0\n2006091102\t208740\t8.4375159740448\t-15.351646900177002\t11489.0\t241.0\t200.0\n2006091111\t233\t5.3449026346206665\t-79.57759857177734\t13885.0\t241.0\t192.0\n2006091110\t548405\t8.892312049865723\t22.82741641998291\t835.0\t241.0\t206.0\n2006091104\t2814912\t28.630459785461426\t-33.30435371398926\t3372.0\t241.0\t213.0\n2006091107\t305660\t8.910503625869751\t-73.79344177246094\t4879.0\t241.0\t191.0\n2006091110\t2368032\t28.4667329788208\t-31.394493103027344\t7914.0\t241.0\t205.0\n2006091108\t1923642\t26.174561500549316\t9.64026927947998\t1760.0\t241.0\t212.0\n2006091106\t497\t7.818993091583252\t-79.35932540893555\t2504.0\t241.0\t216.0\n2006091101\t1107700\t14.531782627105713\t24.60995388031006\t36.0\t241.0\t215.0\n2006091111\t1984\t36.016347885131836\t11.440997123718262\t7450.0\t241.0\t205.0\n2006091107\t168\t5.599588513374329\t-85.81647872924805\t16405.0\t241.0\t195.0\n2006091110\t25551\t3.434759557247162\t7.275677919387817\t7747.0\t241.0\t204.0\n2006091108\t916\t13.058243751525879\t-13.678242683410645\t13747.0\t241.0\t189.0\n2006091110\t70245\t4.926490545272827\t-72.37468719482422\t3782.0\t241.0\t191.0\n2006091100\t2668082\t27.302454948425293\t-84.52505111694336\t2658.0\t241.0\t208.0\n2006091107\t31080\t5.690547823905945\t-85.88923645019531\t13708.0\t241.0\t195.0\n2006091102\t178\t3.1436900943517685\t-66.64509582519531\t5527.0\t241.0\t206.0\n2006091108\t1698180\t19.69826602935791\t-55.713409423828125\t5433.0\t241.0\t194.0\n2006091108\t2030225\t28.775994300842285\t-33.08608531951904\t3983.0\t241.0\t208.0\n2006091101\t254\t6.909401297569275\t-83.34275436401367\t20178.0\t241.0\t194.0\n2006091106\t677950\t10.94798994064331\t-47.41914749145508\t1515.0\t241.0\t200.0\n2006091106\t112847\t7.56430721282959\t-16.661266803741455\t10471.0\t241.0\t198.0\n2006091105\t5\t-2.568548336625099\t-71.88357925415039\t13789.0\t241.0\t202.0\n2006091109\t132\t3.5257186889648438\t7.985055685043335\t8598.0\t241.0\t203.0\n2006091103\t252\t-3.223454475402832\t57.75061798095703\t3567.0\t241.0\t204.0\n2006091100\t85728\t4.326159715652466\t7.803163766860962\t181.0\t241.0\t215.0\n2006091103\t618\t8.8377366065979\t-36.54202651977539\t2513.0\t241.0\t201.0\n2006091110\t76824\t3.3619920015335083\t18.89855670928955\t16.0\t241.0\t208.0\n2006091100\t289\t-2.85961776971817\t-76.99473571777344\t3571.0\t241.0\t199.0\n2006091104\t206856\t7.855376958847046\t-19.97169589996338\t471.0\t241.0\t214.0\n2006091100\t150920\t7.1640870571136475\t-74.97573852539062\t239.0\t241.0\t209.0\n2006091103\t3563697\t36.307416915893555\t10.82256555557251\t736.0\t241.0\t210.0\n2006091106\t2190171\t28.630459785461426\t-33.41348934173584\t5670.0\t241.0\t211.0\n2006091104\t161406\t8.51028323173523\t-32.84962463378906\t4735.0\t241.0\t198.0\n2006091106\t834\t10.838838577270508\t-43.30839729309082\t6646.0\t241.0\t195.0\n2006091106\t1349\t18.388453483581543\t-63.38924026489258\t3253.0\t241.0\t213.0\n2006091103\t356\t6.163535833358765\t-69.10063934326172\t3305.0\t241.0\t201.0\n2006091107\t1483\t31.068166732788086\t10.69524097442627\t2423.0\t241.0\t215.0\n2006091108\t832048\t11.348210334777832\t-44.9999885559082\t9686.0\t241.0\t198.0\n2006091110\t153\t3.4529513716697693\t7.293866872787476\t9237.0\t241.0\t204.0\n2006091107\t856\t13.149202823638916\t-13.569108009338379\t11691.0\t241.0\t187.0\n2006091101\t539\t8.928695678710938\t-87.89004898071289\t3296.0\t241.0\t206.0\n2006091110\t1357\t19.479963302612305\t-55.73159980773926\t5823.0\t241.0\t201.0\n2006091104\t661500\t9.947438716888428\t-44.836286544799805\t364.0\t241.0\t208.0\n2006091108\t119110\t6.309070348739624\t-74.97573852539062\t1486.0\t241.0\t196.0\n2006091100\t660\t4.544461786746979\t-69.51898956298828\t4505.0\t241.0\t200.0\n2006091100\t251174\t8.892312049865723\t-87.90823745727539\t2608.0\t241.0\t211.0\n2006091105\t1988\t35.506975173950195\t11.277294635772705\t3032.0\t241.0\t204.0\n2006091110\t562978\t8.63762617111206\t21.29952621459961\t104.0\t241.0\t197.0\n2006091102\t202014\t6.40002965927124\t-29.721088409423828\t15.0\t241.0\t216.0\n2006091102\t104304\t5.508629560470581\t-76.7400894165039\t2669.0\t241.0\t200.0\n2006091106\t1377\t19.37081241607666\t-55.713409423828125\t7483.0\t241.0\t201.0\n2006091107\t74358\t7.054935932159424\t-78.39530181884766\t121.0\t241.0\t210.0\n2006091105\t755988\t11.821198463439941\t24.300739288330078\t7719.0\t241.0\t196.0\n2006091108\t2082210\t27.99374485015869\t-34.141056060791016\t1887.0\t241.0\t215.0\n2006091102\t1455\t19.24346923828125\t-55.022220611572266\t9023.0\t241.0\t197.0\n2006091107\t18630\t3.562102258205414\t7.8395421504974365\t6929.0\t241.0\t206.0\n2006091101\t2\t-4.3513487577438354\t-72.44744491577148\t2628.0\t241.0\t197.0\n2006091110\t3650560\t34.26992988586426\t9.822161197662354\t17.0\t238.0\t213.0\n2006091110\t1740\t35.41601753234863\t-63.09821128845215\t34765.0\t241.0\t192.0\n2006091101\t579\t8.455707788467407\t-31.576383590698242\t2535.0\t241.0\t199.0\n2006091104\t908\t12.294186115264893\t24.60995388031006\t8633.0\t241.0\t196.0\n2006091101\t142835\t7.746225833892822\t-86.79869842529297\t497.0\t241.0\t214.0\n2006091104\t1061820\t12.98547649383545\t-13.114378929138184\t5297.0\t241.0\t184.0\n2006091107\t1658252\t26.465630531311035\t-30.37589931488037\t1677.0\t241.0\t207.0\n2006091104\t462775\t9.565410137176514\t17.206963539123535\t57.0\t240.0\t208.0\n2006091104\t928\t12.330570220947266\t32.12208080291748\t5519.0\t241.0\t208.0\n2006091106\t163\t4.071474075317383\t8.057812213897705\t7392.0\t241.0\t203.0\n2006091106\t18018\t4.5444618463516235\t-78.28616714477539\t8675.0\t241.0\t201.0\n2006091108\t1405\t28.557692527770996\t-33.63175868988037\t8355.0\t241.0\t208.0\n2006091102\t839800\t13.58580732345581\t26.701708793640137\t9992.0\t241.0\t189.0\n2006091106\t143\t6.036192774772644\t-76.8128433227539\t16668.0\t241.0\t201.0\n2006091111\t504\t7.273238182067871\t-16.843158721923828\t8712.0\t241.0\t206.0\n2006091109\t2095214\t26.447439193725586\t9.98586368560791\t2266.0\t241.0\t213.0\n2006091109\t2958000\t35.45240116119385\t-63.189157485961914\t29818.0\t241.0\t192.0\n2006091104\t1629\t28.575883865356445\t-33.158841133117676\t4042.0\t241.0\t212.0\n2006091110\t113490\t5.1084089279174805\t21.972525596618652\t14.0\t237.0\t211.0\n2006091110\t96030\t4.671804666519165\t22.64552402496338\t150.0\t241.0\t203.0\n2006091101\t2454400\t22.954605102539062\t-81.34194946289062\t2300.0\t241.0\t206.0\n2006091110\t238896\t7.255046367645264\t-16.843158721923828\t7597.0\t241.0\t199.0\n2006091110\t133860\t5.672355890274048\t20.790228843688965\t50.0\t241.0\t212.0\n2006091108\t2708100\t35.28867435455322\t-63.443803787231445\t31089.0\t241.0\t195.0\n2006091106\t2432172\t34.63376808166504\t-63.82577896118164\t34143.0\t241.0\t172.0\n2006091100\t1\t-4.3513487577438354\t-72.55657958984375\t2517.0\t241.0\t196.0\n2006091101\t662\t9.092422485351562\t-35.396108627319336\t2547.0\t241.0\t208.0\n2006091109\t257418\t7.964528322219849\t-33.61357116699219\t28.0\t241.0\t208.0\n2006091105\t469\t7.76441764831543\t-77.59497833251953\t5464.0\t241.0\t211.0\n2006091109\t952\t11.36640214920044\t-44.126909255981445\t12182.0\t241.0\t199.0\n2006091104\t366\t7.637074708938599\t-31.812843322753906\t9578.0\t241.0\t198.0\n2006091108\t21420\t4.762763857841492\t-79.37751388549805\t7715.0\t241.0\t190.0\n2006091110\t77697\t3.980514645576477\t20.80841827392578\t777.0\t241.0\t201.0\n2006091106\t2922561\t35.50697708129883\t11.204537868499756\t3411.0\t241.0\t208.0\n2006091106\t22494\t3.744020700454712\t8.057812213897705\t6261.0\t241.0\t203.0\n2006091102\t115\t1.2517384886741638\t-73.55698013305664\t7174.0\t241.0\t196.0\n2006091101\t3495456\t35.72527885437012\t-63.934913635253906\t31619.0\t241.0\t199.0\n2006091105\t1929070\t18.588562965393066\t-63.60750961303711\t1510.0\t241.0\t213.0\n2006091109\t336\t-2.677699327468872\t-73.64793014526367\t7203.0\t241.0\t202.0\n2006091103\t387\t7.509731769561768\t-31.33992576599121\t7941.0\t241.0\t198.0\n2006091105\t311\t6.3272621631622314\t-69.28252792358398\t2560.0\t241.0\t225.0\n2006091109\t20196\t3.489335060119629\t8.076000928878784\t7107.0\t241.0\t203.0\n2006091106\t97713\t6.018001079559326\t-30.66692543029785\t2601.0\t241.0\t209.0\n2006091101\t815\t13.458464622497559\t28.065896034240723\t27569.0\t241.0\t193.0\n2006091103\t68894\t4.762763857841492\t8.403406143188477\t3500.0\t241.0\t207.0\n2006091109\t191\t5.599588513374329\t-86.14388656616211\t15356.0\t241.0\t194.0\n2006091101\t156456\t6.454605340957642\t-75.32133483886719\t61.0\t241.0\t213.0\n2006091106\t860280\t13.058243751525879\t-13.332649230957031\t9298.0\t241.0\t189.0\n2006091102\t66563\t4.144241213798523\t9.56751298904419\t805.0\t241.0\t216.0\n2006091102\t1172489\t12.78536605834961\t-12.93248701095581\t1919.0\t241.0\t190.0\n2006091104\t331700\t8.346556425094604\t15.64269495010376\t1830.0\t241.0\t207.0\n2006091108\t1134\t15.987130165100098\t-88.70856094360352\t2968.0\t241.0\t191.0\n2006091110\t2093851\t19.97114372253418\t-55.731597900390625\t4520.0\t241.0\t201.0\n2006091110\t23\t-2.604931801557541\t56.91391563415527\t8524.0\t241.0\t206.0\n2006091107\t758\t11.839390277862549\t23.827820777893066\t8052.0\t241.0\t212.0\n2006091106\t775545\t11.457361698150635\t-39.997968673706055\t12.0\t240.0\t215.0\n2006091104\t73130\t4.871915102005005\t-87.79909896850586\t102.0\t240.0\t214.0\n2006091102\t2\t-4.169430375099182\t-72.50201034545898\t3160.0\t241.0\t203.0\n2006091105\t1116\t14.404439926147461\t-88.69037246704102\t5471.0\t241.0\t201.0\n2006091103\t1218800\t14.004219055175781\t-88.70856094360352\t4570.0\t241.0\t197.0\n2006091103\t130652\t6.018000841140747\t-69.15520477294922\t2634.0\t241.0\t201.0\n2006091103\t917448\t11.02075719833374\t-48.7833366394043\t37.0\t240.0\t212.0\n2006091102\t396\t-3.2052626609802246\t57.641483306884766\t2791.0\t241.0\t202.0\n2006091103\t1733\t28.466733932495117\t-33.24978828430176\t3272.0\t241.0\t209.0\n2006091109\t53074\t5.017449617385864\t-72.35649871826172\t3740.0\t241.0\t199.0\n2006091108\t28\t-2.877809524536133\t-73.10225296020508\t8559.0\t241.0\t200.0\n2006091108\t249400\t8.946887254714966\t-73.81163024902344\t5877.0\t241.0\t191.0\n2006091111\t1129\t13.203778266906738\t-14.951484680175781\t15942.0\t241.0\t193.0\n2006091103\t2823057\t28.557692527770996\t-33.24978828430176\t2751.0\t241.0\t209.0\n2006091101\t357\t-3.1143035292625427\t-77.30395126342773\t2795.0\t241.0\t205.0\n2006091101\t1015\t13.367504596710205\t35.74172592163086\t6393.0\t241.0\t203.0\n2006091107\t3\t-2.6413156986236572\t-72.28374099731445\t12048.0\t241.0\t197.0\n2006091109\t14\t-2.877809524536133\t-73.06587600708008\t9514.0\t241.0\t202.0\n2006091107\t297\t6.018001079559326\t-30.194007873535156\t3376.0\t241.0\t208.0\n2006091104\t2967640\t34.160780906677246\t-62.69804763793945\t36569.0\t241.0\t199.0\n2006091103\t514\t7.41877293586731\t-77.35851669311523\t5740.0\t241.0\t195.0\n2006091105\t183162\t7.5461156368255615\t-16.84315776824951\t46.0\t241.0\t210.0\n2006091110\t56304\t5.5268213748931885\t-86.4349136352539\t13104.0\t241.0\t197.0\n2006091110\t913\t11.49374532699585\t-43.63580322265625\t12637.0\t241.0\t200.0\n2006091110\t2415906\t27.538949966430664\t-35.10508346557617\t2609.0\t241.0\t214.0\n2006091109\t1038\t13.276546001434326\t-14.16935110092163\t14541.0\t241.0\t188.0\n2006091101\t774250\t13.51304006576538\t27.738492012023926\t17480.0\t241.0\t193.0\n2006091102\t795600\t9.72913646697998\t25.428466796875\t19.0\t238.0\t212.0\n2006091107\t1137\t19.64369010925293\t-55.713409423828125\t6033.0\t241.0\t201.0\n2006091105\t535\t8.58305048942566\t15.860965251922607\t2587.0\t241.0\t205.0\n2006091109\t140\t5.144792437553406\t-79.54122161865234\t10426.0\t241.0\t189.0\n2006091101\t1\t-4.314965128898621\t-72.59296035766602\t2969.0\t241.0\t197.0\n2006091107\t87318\t5.854274272918701\t-30.357709884643555\t2471.0\t241.0\t208.0\n2006091106\t876\t11.784814834594727\t24.118847846984863\t8775.0\t241.0\t206.0\n2006091105\t863\t12.294186115264893\t24.30073833465576\t9571.0\t241.0\t196.0\n2006091109\t238\t5.162984371185303\t-72.33831024169922\t4353.0\t241.0\t199.0\n2006091102\t33\t-3.2052626609802246\t57.7142391204834\t3262.0\t241.0\t202.0\n2006091108\t135\t3.5257186889648438\t7.60308313369751\t8686.0\t241.0\t205.0\n2006091101\t461378\t9.547218322753906\t-49.23806571960449\t2212.0\t241.0\t208.0\n2006091100\t600\t-3.1870709657669067\t57.823373794555664\t1900.0\t241.0\t204.0\n2006091107\t6\t-2.6595073342323303\t-72.73847198486328\t9431.0\t241.0\t197.0\n2006091103\t968\t12.185035228729248\t30.448678016662598\t3588.0\t241.0\t210.0\n2006091106\t35466\t4.307967901229858\t11.604699611663818\t590.0\t241.0\t216.0\n2006091106\t797895\t12.221418857574463\t-45.65480041503906\t116.0\t241.0\t195.0\n2006091104\t116754\t6.254494905471802\t-30.557790756225586\t3261.0\t241.0\t205.0\n2006091104\t1041\t12.98547649383545\t-13.078000545501709\t5363.0\t241.0\t184.0\n2006091101\t1832\t35.14313983917236\t-63.33467102050781\t39066.0\t241.0\t199.0\n2006091106\t47561\t5.162984609603882\t-72.02909469604492\t1913.0\t241.0\t209.0\n2006091111\t32\t-2.477589100599289\t-74.12084579467773\t5353.0\t241.0\t204.0\n2006091108\t152781\t7.818993330001831\t-33.413490295410156\t7297.0\t241.0\t200.0\n2006091106\t664008\t11.803006649017334\t24.027901649475098\t7024.0\t241.0\t206.0\n2006091103\t3507246\t35.36144256591797\t11.331861972808838\t398.0\t241.0\t212.0\n2006091107\t651122\t11.930349349975586\t23.991522789001465\t5364.0\t241.0\t212.0\n2006091109\t1801\t35.77985382080078\t11.259105682373047\t4897.0\t241.0\t208.0\n2006091101\t460\t7.018552303314209\t-30.7396821975708\t2751.0\t241.0\t204.0\n2006091108\t1926185\t26.811275482177734\t-30.303142547607422\t2579.0\t241.0\t202.0\n2006091105\t2873664\t28.339390754699707\t-33.41348934173584\t4757.0\t241.0\t211.0\n2006091107\t329\t7.509731769561768\t-16.64307689666748\t12950.0\t241.0\t195.0\n2006091109\t17\t-2.768658548593521\t56.67745590209961\t8403.0\t241.0\t206.0\n2006091102\t67840\t6.12715208530426\t-84.70694351196289\t13027.0\t241.0\t192.0\n2006091105\t275\t5.417670011520386\t-76.23079299926758\t5012.0\t241.0\t204.0\n2006091106\t1221\t15.714252948760986\t-88.63579940795898\t2757.0\t241.0\t200.0\n2006091101\t308\t6.145344018936157\t-77.0311164855957\t5488.0\t241.0\t194.0\n2006091107\t651130\t11.27544355392456\t-44.672584533691406\t8074.0\t241.0\t199.0\n2006091103\t241066\t7.455156564712524\t-77.32213973999023\t4784.0\t241.0\t195.0\n2006091103\t106600\t5.344902992248535\t-76.50362777709961\t3253.0\t241.0\t192.0\n2006091104\t711750\t10.402234554290771\t-41.74412727355957\t67.0\t241.0\t215.0\n2006091104\t469\t7.309621810913086\t-77.48584365844727\t5696.0\t241.0\t202.0\n2006091110\t2334420\t26.28371238708496\t10.2041335105896\t2240.0\t241.0\t214.0\n2006091105\t233093\t7.909952402114868\t-79.32295227050781\t1868.0\t241.0\t212.0\n2006091103\t298656\t9.747328281402588\t-34.25019073486328\t231.0\t241.0\t208.0\n2006091103\t3503604\t34.797494888305664\t10.586106300354004\t48.0\t240.0\t213.0\n2006091110\t483\t-2.6231236457824707\t57.78699493408203\t6828.0\t241.0\t206.0\n2006091102\t368946\t8.98327112197876\t-36.14186477661133\t1506.0\t241.0\t206.0\n2006091108\t3034685\t35.65251159667969\t10.913511276245117\t3914.0\t241.0\t209.0\n2006091105\t19900\t3.88955557346344\t-66.88155746459961\t1773.0\t241.0\t205.0\n2006091100\t9\t0.30576276779174805\t-70.44663619995117\t20540.0\t241.0\t193.0\n2006091110\t3646592\t34.30631446838379\t10.567917346954346\t54.0\t241.0\t206.0\n2006091100\t1224990\t13.694958209991455\t-88.32658767700195\t3916.0\t241.0\t194.0\n2006091109\t39537\t5.45405387878418\t-86.19845199584961\t12421.0\t241.0\t194.0\n2006091102\t148995\t5.690547704696655\t-29.666521072387695\t668.0\t241.0\t209.0\n2006091109\t45747\t4.671804666519165\t5.111166954040527\t534.0\t241.0\t215.0\n2006091103\t898304\t12.094075679779053\t30.557812690734863\t2391.0\t241.0\t210.0\n2006091109\t1268\t16.36915922164917\t-88.61761093139648\t3201.0\t241.0\t194.0\n2006091101\t368823\t8.619434356689453\t-31.667329788208008\t2006.0\t241.0\t199.0\n2006091109\t1062912\t13.294737815856934\t-14.278486251831055\t12748.0\t241.0\t188.0\n2006091101\t115758\t5.999809265136719\t-68.90055465698242\t2202.0\t241.0\t191.0\n2006091105\t319\t6.254494905471802\t-30.23038673400879\t4039.0\t241.0\t207.0\n2006091106\t1268619\t15.750636577606201\t-88.63580322265625\t2352.0\t241.0\t200.0\n2006091109\t1700\t35.23409938812256\t-63.443803787231445\t36684.0\t241.0\t192.0\n2006091110\t3632704\t34.19716262817383\t11.204538345336914\t52.0\t241.0\t211.0\n2006091107\t84\t-2.9687687754631042\t-5.256660461425781\t6316.0\t241.0\t206.0\n2006091102\t3032750\t28.121088981628418\t-32.97694969177246\t1962.0\t241.0\t212.0\n2006091104\t49440\t5.999809145927429\t-85.14348220825195\t13140.0\t241.0\t195.0\n2006091110\t126876\t5.508629560470581\t20.13541889190674\t55.0\t241.0\t216.0\n2006091111\t1543\t20.13486957550049\t-55.713409423828125\t5122.0\t241.0\t203.0\n2006091102\t19\t-2.3684379011392593\t-70.17379760742188\t9807.0\t241.0\t196.0\n2006091103\t90\t-2.8050421476364136\t-74.01171112060547\t117.0\t241.0\t205.0\n2006091103\t3141700\t35.16133213043213\t-69.44623184204102\t3508.0\t241.0\t216.0\n2006091105\t39325\t5.417670011520386\t-76.23079299926758\t4775.0\t241.0\t204.0\n2006091101\t3205470\t30.358684539794922\t-65.53556060791016\t4880.0\t241.0\t198.0\n2006091100\t184184\t7.746226072311401\t-75.39408874511719\t52.0\t236.0\t208.0\n2006091111\t272\t5.472245812416077\t-86.52585983276367\t15348.0\t241.0\t197.0\n2006091110\t714\t-3.732825994491577\t59.40583038330078\t403.0\t241.0\t210.0\n2006091110\t1156096\t13.25835371017456\t-14.678647518157959\t12808.0\t241.0\t187.0\n2006091104\t2740608\t26.720316886901855\t-31.958356857299805\t178.0\t241.0\t211.0\n2006091102\t3223580\t30.613369941711426\t-65.29909896850586\t6260.0\t241.0\t199.0\n2006091101\t237160\t9.747328519821167\t-15.151565074920654\t13323.0\t241.0\t195.0\n2006091102\t388104\t8.0372953414917\t-37.81526756286621\t246.0\t241.0\t203.0\n2006091105\t750\t10.565961360931396\t-45.563852310180664\t8998.0\t241.0\t195.0\n2006091105\t100\t3.198265492916107\t-66.46320724487305\t5043.0\t241.0\t205.0\n2006091102\t64\t-3.0233442783355713\t-72.92036056518555\t22.0\t239.0\t208.0\n2006091108\t234184\t7.891760587692261\t-35.905405044555664\t659.0\t241.0\t205.0\n2006091101\t342081\t7.728034257888794\t-35.08689308166504\t374.0\t241.0\t211.0\n2006091103\t3529098\t35.470590591430664\t10.40421438217163\t120.0\t240.0\t209.0\n2006091107\t19278\t4.4353107213974\t-79.25019073486328\t6508.0\t241.0\t191.0\n2006091102\t698\t9.547218322753906\t-49.474525451660156\t3213.0\t241.0\t201.0\n2006091102\t163452\t7.364197015762329\t-77.28576278686523\t4637.0\t241.0\t194.0\n2006091104\t1821\t35.688894271850586\t11.113592147827148\t2535.0\t241.0\t205.0\n2006091107\t1039\t15.89617109298706\t-88.65399169921875\t2892.0\t241.0\t195.0\n2006091110\t1807056\t16.405542373657227\t-88.58123397827148\t3308.0\t241.0\t200.0\n2006091101\t24\t-3.2052626609802246\t58.041643142700195\t2797.0\t241.0\t202.0\n2006091104\t103194\t5.399478197097778\t-63.88034439086914\t1061.0\t241.0\t206.0\n2006091110\t768\t-2.495780885219574\t-73.99352264404297\t4840.0\t241.0\t204.0\n2006091107\t134890\t7.637074708938599\t-16.679455280303955\t6852.0\t241.0\t195.0\n2006091105\t205506\t8.16463828086853\t-32.958760261535645\t5780.0\t241.0\t198.0\n2006091107\t784096\t13.149202823638916\t-13.569108009338379\t11282.0\t241.0\t187.0\n2006091102\t246519\t8.746777057647705\t-32.34032917022705\t2034.0\t241.0\t197.0\n2006091105\t2953592\t33.45129871368408\t-62.40702247619629\t47565.0\t241.0\t193.0\n2006091106\t2727156\t31.94137477874756\t-66.93612289428711\t8.0\t233.0\t193.0\n2006091107\t34902\t5.7815070152282715\t-75.28495407104492\t2150.0\t241.0\t196.0\n2006091110\t41940\t5.399478197097778\t-79.55941009521484\t11355.0\t241.0\t191.0\n2006091104\t50806\t4.708188414573669\t8.148757696151733\t4400.0\t241.0\t207.0\n2006091107\t2303478\t35.23409938812256\t-63.734832763671875\t32049.0\t241.0\t193.0\n2006091101\t395214\t9.092422008514404\t-35.6507568359375\t1859.0\t241.0\t208.0\n2006091100\t244904\t10.438618421554565\t-15.09699821472168\t14797.0\t241.0\t191.0\n2006091105\t1020\t12.967284202575684\t-13.241703510284424\t7402.0\t241.0\t187.0\n2006091107\t239\t5.290327310562134\t-72.10184860229492\t2679.0\t241.0\t194.0\n2006091106\t211\t5.7451231479644775\t-85.67096710205078\t16389.0\t241.0\t199.0\n2006091104\t114137\t6.054384708404541\t-69.42804336547852\t1840.0\t241.0\t206.0\n2006091102\t236430\t6.9457848072052\t-16.57032012939453\t146.0\t241.0\t202.0\n2006091108\t204\t-2.5503563582897186\t-7.221088409423828\t6696.0\t241.0\t204.0\n2006091109\t2059189\t25.01028347015381\t9.42199993133545\t250.0\t241.0\t215.0\n2006091101\t87856\t5.235751748085022\t7.857731342315674\t1886.0\t241.0\t209.0\n2006091110\t150444\t7.5461156368255615\t-34.65035343170166\t6683.0\t241.0\t201.0\n2006091105\t1025100\t12.985476016998291\t-13.259892463684082\t7186.0\t241.0\t187.0\n2006091110\t564512\t8.78316068649292\t24.810035705566406\t334.0\t241.0\t205.0\n2006091108\t874\t11.29363489151001\t-44.9999885559082\t10619.0\t241.0\t198.0\n2006091105\t984680\t14.113370418548584\t29.575596809387207\t344.0\t241.0\t213.0\n2006091105\t19162\t3.034538984298706\t-77.84962463378906\t1706.0\t241.0\t207.0\n2006091108\t1593\t35.23409938812256\t-63.698455810546875\t38480.0\t241.0\t195.0\n2006091110\t474\t7.273238182067871\t-16.89772605895996\t8782.0\t241.0\t199.0\n2006091100\t6006\t-0.09445780515670776\t22.00890350341797\t3273.0\t241.0\t193.0\n2006091108\t1245\t19.69826602935791\t-55.713409423828125\t6541.0\t241.0\t194.0\n2006091101\t345\t1.1789711713790894\t-73.48422622680664\t5880.0\t241.0\t195.0\n2006091110\t1451\t28.39396572113037\t-31.394493103027344\t10024.0\t241.0\t205.0\n2006091107\t527\t8.910503625869751\t-73.77524948120117\t5264.0\t241.0\t191.0\n2006091102\t74851\t5.053833246231079\t7.784974813461304\t2060.0\t241.0\t209.0\n2006091102\t597\t8.564858675003052\t-35.6689453125\t3102.0\t241.0\t206.0\n2006091102\t289\t5.18117618560791\t7.784974813461304\t2626.0\t241.0\t209.0\n2006091102\t250062\t7.346005439758301\t-16.27929449081421\t170.0\t241.0\t212.0\n2006091102\t1811\t30.613369941711426\t-65.09902000427246\t7050.0\t241.0\t199.0\n2006091100\t1479933\t15.132113933563232\t-86.3621597290039\t2091.0\t241.0\t203.0\n2006091103\t168696\t8.110062837600708\t-15.588105201721191\t12959.0\t241.0\t196.0\n2006091105\t52138\t4.835531234741211\t-71.5743637084961\t1151.0\t241.0\t215.0\n2006091103\t884\t13.60399866104126\t26.41068172454834\t12779.0\t241.0\t195.0\n2006091111\t960\t11.475553512573242\t-44.01777458190918\t14616.0\t241.0\t200.0\n2006091104\t3620148\t35.688894271850586\t11.131781101226807\t2077.0\t241.0\t205.0\n2006091102\t2079195\t19.134318351745605\t-54.840328216552734\t6963.0\t241.0\t197.0\n2006091104\t1383\t19.35262107849121\t-55.131357192993164\t7691.0\t241.0\t198.0\n"
      },
      "dateCreated": "Jul 14, 2016 11:51:35 PM",
      "dateStarted": "Jul 18, 2016 1:47:35 PM",
      "dateFinished": "Jul 18, 2016 1:47:39 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Quick exercise",
      "text": "%md\nExperiment with the SQL table default settings for visualization.",
      "dateUpdated": "Jul 18, 2016 1:46:31 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468566911723_-1303487997",
      "id": "20160715-001511_70696913",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eExperiment with the SQL table default settings for visualization.\u003c/p\u003e\n"
      },
      "dateCreated": "Jul 15, 2016 12:15:11 AM",
      "dateStarted": "Jul 18, 2016 1:46:31 PM",
      "dateFinished": "Jul 18, 2016 1:46:32 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n",
      "dateUpdated": "Jul 18, 2016 1:46:31 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467955779754_-1167133349",
      "id": "20160707-222939_612742969",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 7, 2016 10:29:39 PM",
      "dateStarted": "Jul 18, 2016 1:47:35 PM",
      "dateFinished": "Jul 18, 2016 1:47:39 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Jul 18, 2016 1:46:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468872942417_2003827646",
      "id": "20160718-131542_119277343",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Jul 18, 2016 1:15:42 PM",
      "dateStarted": "Jul 18, 2016 1:47:39 PM",
      "dateFinished": "Jul 18, 2016 1:47:39 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "201-3 End-to-end MCS part 1",
  "id": "2BR2UXBCR",
  "angularObjects": {
    "2BATG925A": [],
    "2BCTKA5P2": [],
    "2B9VMB5BB": [],
    "2BAA8ZT1F": [],
    "2BRSK8FXN": [],
    "2BCYFRWUC": [],
    "2BCC68R3T": [],
    "2BA8C2CJ4": [],
    "2B9AHSVAD": [],
    "2BCZV9QGQ": [],
    "2B9U51XQ6": [],
    "2B9VX5KPM": [],
    "2BAM6HXAB": [],
    "2B9AFX9BM": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}
